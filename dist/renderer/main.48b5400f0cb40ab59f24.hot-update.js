"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateascent"]("main",{

/***/ 675621:
/*!****************************************************!*\
  !*** ./src/renderer/components/AddHabitDialog.tsx ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst HabitContext_1 = __webpack_require__(/*! ../context/HabitContext */ 199684);\nconst FREQUENCY_DESCRIPTIONS = {\n    daily: 'Track this habit every day',\n    weekly: 'Track this habit on a weekly basis',\n    monthly: 'Track this habit monthly',\n};\nconst AddHabitDialog = ({ open, onClose }) => {\n    const { addHabit, error: contextError } = (0, HabitContext_1.useHabits)();\n    const [name, setName] = (0, react_1.useState)('');\n    const [description, setDescription] = (0, react_1.useState)('');\n    const [frequency, setFrequency] = (0, react_1.useState)('daily');\n    const [color, setColor] = (0, react_1.useState)('#1976d2');\n    const [trackQuantity, setTrackQuantity] = (0, react_1.useState)(false);\n    const [unit, setUnit] = (0, react_1.useState)('');\n    const [validationError, setValidationError] = (0, react_1.useState)(null);\n    const [isSubmitting, setIsSubmitting] = (0, react_1.useState)(false);\n    const resetForm = (0, react_1.useCallback)(() => {\n        setName('');\n        setDescription('');\n        setFrequency('daily');\n        setColor('#1976d2');\n        setTrackQuantity(false);\n        setUnit('');\n        setValidationError(null);\n    }, []);\n    (0, react_1.useEffect)(() => {\n        if (!open) {\n            const timer = setTimeout(() => {\n                resetForm();\n                setIsSubmitting(false);\n            }, 300);\n            return () => clearTimeout(timer);\n        }\n    }, [open, resetForm]);\n    const handleClose = (0, react_1.useCallback)(() => {\n        if (isSubmitting)\n            return;\n        onClose();\n    }, [onClose, isSubmitting]);\n    const validateForm = (0, react_1.useCallback)(() => {\n        if (!name.trim()) {\n            setValidationError('Habit name is required');\n            return false;\n        }\n        if (name.trim().length > 50) {\n            setValidationError('Habit name must be less than 50 characters');\n            return false;\n        }\n        if (description.length > 200) {\n            setValidationError('Description must be less than 200 characters');\n            return false;\n        }\n        if (trackQuantity && !unit.trim()) {\n            setValidationError('Unit is required when tracking quantity');\n            return false;\n        }\n        if (trackQuantity && unit.trim().length > 20) {\n            setValidationError('Unit must be less than 20 characters');\n            return false;\n        }\n        setValidationError(null);\n        return true;\n    }, [name, description, trackQuantity, unit]);\n    const handleSubmit = (0, react_1.useCallback)((e) => {\n        e.preventDefault();\n        if (!validateForm() || isSubmitting) {\n            return;\n        }\n        setIsSubmitting(true);\n        addHabit({\n            name: name.trim(),\n            description: description.trim(),\n            frequency,\n            color,\n            trackQuantity,\n            unit: trackQuantity ? unit.trim() : undefined,\n        });\n        setTimeout(() => {\n            onClose();\n            setIsSubmitting(false);\n        }, 50);\n    }, [name, description, frequency, color, trackQuantity, unit, addHabit, onClose, validateForm, isSubmitting]);\n    return ((0, jsx_runtime_1.jsx)(material_1.Dialog, { open: open, onClose: handleClose, maxWidth: \"sm\", fullWidth: true, PaperProps: {\n            sx: {\n                minHeight: '50vh',\n                borderRadius: '12px',\n                boxShadow: '0 8px 30px rgba(0,0,0,0.12)',\n                overflow: 'hidden'\n            }\n        }, TransitionProps: {\n            onExited: resetForm\n        }, children: (0, jsx_runtime_1.jsxs)(\"form\", { onSubmit: handleSubmit, children: [(0, jsx_runtime_1.jsx)(material_1.DialogTitle, { sx: {\n                        borderBottom: '1px solid #f0f0f0',\n                        pb: 2,\n                        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n                        color: 'white',\n                    }, children: \"Add New Habit\" }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { sx: { mt: 2 }, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', flexDirection: 'column', gap: 2, mt: 1 }, children: [(validationError || contextError) && ((0, jsx_runtime_1.jsx)(material_1.Alert, { severity: \"error\", sx: { mb: 2 }, children: validationError || contextError })), (0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Habit Name\", value: name, onChange: (e) => setName(e.target.value), required: true, fullWidth: true, error: !!validationError && validationError.includes('name'), helperText: `${name.length}/50 characters`, InputProps: {\n                                    endAdornment: ((0, jsx_runtime_1.jsx)(material_1.InputAdornment, { position: \"end\", children: (0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: \"Enter a clear, concise name for your habit\", children: (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", children: (0, jsx_runtime_1.jsx)(icons_material_1.Help, { fontSize: \"small\" }) }) }) })),\n                                } }), (0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Description\", value: description, onChange: (e) => setDescription(e.target.value), multiline: true, rows: 2, fullWidth: true, error: !!validationError && validationError.includes('Description'), helperText: `${description.length}/200 characters` }), (0, jsx_runtime_1.jsxs)(material_1.FormControl, { fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.InputLabel, { children: \"Frequency\" }), (0, jsx_runtime_1.jsx)(material_1.Select, { value: frequency, label: \"Frequency\", onChange: (e) => setFrequency(e.target.value), children: Object.entries(FREQUENCY_DESCRIPTIONS).map(([value, description]) => ((0, jsx_runtime_1.jsx)(material_1.MenuItem, { value: value, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { children: [(0, jsx_runtime_1.jsx)(material_1.Box, { children: value.charAt(0).toUpperCase() + value.slice(1) }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: { fontSize: '0.75rem', color: 'text.secondary' }, children: description })] }) }, value))) })] }), (0, jsx_runtime_1.jsxs)(material_1.FormControl, { fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.InputLabel, { shrink: true, htmlFor: \"color-input\", children: \"Color\" }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center', gap: 2, mt: 2 }, children: [(0, jsx_runtime_1.jsx)(material_1.TextField, { id: \"color-input\", type: \"color\", value: color, onChange: (e) => setColor(e.target.value), sx: { width: 100 } }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                                    width: 40,\n                                                    height: 40,\n                                                    borderRadius: 1,\n                                                    bgcolor: color,\n                                                    border: '1px solid',\n                                                    borderColor: 'divider',\n                                                } })] })] }), (0, jsx_runtime_1.jsx)(material_1.FormControlLabel, { control: (0, jsx_runtime_1.jsx)(material_1.Switch, { checked: trackQuantity, onChange: (e) => {\n                                        setTrackQuantity(e.target.checked);\n                                        if (!e.target.checked) {\n                                            setUnit('');\n                                        }\n                                    } }), label: (0, jsx_runtime_1.jsxs)(material_1.Box, { children: [\"Track Quantity\", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: { display: 'block', color: 'text.secondary' }, children: \"Enable to track numeric values for this habit\" })] }) }), trackQuantity && ((0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Unit (e.g., pages, minutes, km)\", value: unit, onChange: (e) => setUnit(e.target.value), fullWidth: true, placeholder: \"e.g., pages, minutes, km\", error: !!validationError && validationError.includes('Unit'), helperText: `${unit.length}/20 characters` }))] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { sx: { px: 3, py: 2, borderTop: '1px solid #f0f0f0' }, children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: handleClose, sx: { borderRadius: '20px', px: 2 }, children: \"Cancel\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { type: \"submit\", variant: \"contained\", color: \"primary\", disabled: !name.trim() || (trackQuantity && !unit.trim()), sx: {\n                                borderRadius: '20px',\n                                px: 2,\n                                background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n                                boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n                            }, children: \"Add Habit\" })] })] }) }));\n};\nexports[\"default\"] = react_1.default.memo(AddHabitDialog);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///675621\n");

/***/ })

});