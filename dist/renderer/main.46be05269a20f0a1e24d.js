"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkascent"] = self["webpackChunkascent"] || []).push([["main"],{

/***/ 1335:
/*!********************************!*\
  !*** ./src/renderer/index.tsx ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importDefault(__webpack_require__(/*! react */ 296540));\nconst client_1 = __webpack_require__(/*! react-dom/client */ 205338);\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst App_1 = __importDefault(__webpack_require__(/*! ./App */ 207526));\nconst theme = (0, material_1.createTheme)({\n    palette: {\n        mode: 'light',\n    },\n});\nconst container = document.getElementById('root');\nif (!container)\n    throw new Error('Failed to find the root element');\nconst root = (0, client_1.createRoot)(container);\nconst ErrorBoundary = ({ children }) => {\n    const [hasError, setHasError] = react_1.default.useState(false);\n    const [error, setError] = react_1.default.useState(null);\n    react_1.default.useEffect(() => {\n        const handleError = (error) => {\n            console.error('Uncaught error:', error);\n            setHasError(true);\n            setError(error.error);\n        };\n        window.addEventListener('error', handleError);\n        return () => window.removeEventListener('error', handleError);\n    }, []);\n    if (hasError) {\n        return ((0, jsx_runtime_1.jsxs)(\"div\", { style: { padding: 20, color: 'red' }, children: [(0, jsx_runtime_1.jsx)(\"h1\", { children: \"Something went wrong\" }), (0, jsx_runtime_1.jsx)(\"pre\", { children: error?.message }), (0, jsx_runtime_1.jsx)(\"button\", { onClick: () => window.location.reload(), children: \"Reload App\" })] }));\n    }\n    return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: children });\n};\nroot.render((0, jsx_runtime_1.jsx)(react_1.default.StrictMode, { children: (0, jsx_runtime_1.jsx)(ErrorBoundary, { children: (0, jsx_runtime_1.jsxs)(material_1.ThemeProvider, { theme: theme, children: [(0, jsx_runtime_1.jsx)(material_1.CssBaseline, {}), (0, jsx_runtime_1.jsx)(App_1.default, {})] }) }) }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMzNS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixtQkFBTyxDQUFDLCtCQUFtQjtBQUNqRCxnQ0FBZ0MsbUJBQU8sQ0FBQyxtQkFBTztBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyw4QkFBa0I7QUFDM0MsbUJBQW1CLG1CQUFPLENBQUMsMkJBQWU7QUFDMUMsOEJBQThCLG1CQUFPLENBQUMsbUJBQU87QUFDN0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsaURBQWlELFNBQVMsMkJBQTJCLDRDQUE0QyxrQ0FBa0MsbUNBQW1DLDBCQUEwQixzQ0FBc0MsaUVBQWlFLElBQUk7QUFDM1U7QUFDQSw0REFBNEQsb0JBQW9CO0FBQ2hGO0FBQ0EsaUVBQWlFLGtEQUFrRCw4REFBOEQsMEVBQTBFLDJDQUEyQyxJQUFJLEdBQUcsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL2FzY2VudC8uL3NyYy9yZW5kZXJlci9pbmRleC50c3g/ZGQyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGpzeF9ydW50aW1lXzEgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCByZWFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBjbGllbnRfMSA9IHJlcXVpcmUoXCJyZWFjdC1kb20vY2xpZW50XCIpO1xuY29uc3QgbWF0ZXJpYWxfMSA9IHJlcXVpcmUoXCJAbXVpL21hdGVyaWFsXCIpO1xuY29uc3QgQXBwXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vQXBwXCIpKTtcbmNvbnN0IHRoZW1lID0gKDAsIG1hdGVyaWFsXzEuY3JlYXRlVGhlbWUpKHtcbiAgICBwYWxldHRlOiB7XG4gICAgICAgIG1vZGU6ICdsaWdodCcsXG4gICAgfSxcbn0pO1xuY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKTtcbmlmICghY29udGFpbmVyKVxuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZpbmQgdGhlIHJvb3QgZWxlbWVudCcpO1xuY29uc3Qgcm9vdCA9ICgwLCBjbGllbnRfMS5jcmVhdGVSb290KShjb250YWluZXIpO1xuY29uc3QgRXJyb3JCb3VuZGFyeSA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgICBjb25zdCBbaGFzRXJyb3IsIHNldEhhc0Vycm9yXSA9IHJlYWN0XzEuZGVmYXVsdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSByZWFjdF8xLmRlZmF1bHQudXNlU3RhdGUobnVsbCk7XG4gICAgcmVhY3RfMS5kZWZhdWx0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGhhbmRsZUVycm9yID0gKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdVbmNhdWdodCBlcnJvcjonLCBlcnJvcik7XG4gICAgICAgICAgICBzZXRIYXNFcnJvcih0cnVlKTtcbiAgICAgICAgICAgIHNldEVycm9yKGVycm9yLmVycm9yKTtcbiAgICAgICAgfTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgaGFuZGxlRXJyb3IpO1xuICAgICAgICByZXR1cm4gKCkgPT4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgaGFuZGxlRXJyb3IpO1xuICAgIH0sIFtdKTtcbiAgICBpZiAoaGFzRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3hzKShcImRpdlwiLCB7IHN0eWxlOiB7IHBhZGRpbmc6IDIwLCBjb2xvcjogJ3JlZCcgfSwgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiaDFcIiwgeyBjaGlsZHJlbjogXCJTb21ldGhpbmcgd2VudCB3cm9uZ1wiIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwicHJlXCIsIHsgY2hpbGRyZW46IGVycm9yPy5tZXNzYWdlIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiYnV0dG9uXCIsIHsgb25DbGljazogKCkgPT4gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpLCBjaGlsZHJlbjogXCJSZWxvYWQgQXBwXCIgfSldIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBqc3hfcnVudGltZV8xLmpzeCkoanN4X3J1bnRpbWVfMS5GcmFnbWVudCwgeyBjaGlsZHJlbjogY2hpbGRyZW4gfSk7XG59O1xucm9vdC5yZW5kZXIoKDAsIGpzeF9ydW50aW1lXzEuanN4KShyZWFjdF8xLmRlZmF1bHQuU3RyaWN0TW9kZSwgeyBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShFcnJvckJvdW5kYXJ5LCB7IGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLlRoZW1lUHJvdmlkZXIsIHsgdGhlbWU6IHRoZW1lLCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5Dc3NCYXNlbGluZSwge30pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKEFwcF8xLmRlZmF1bHQsIHt9KV0gfSkgfSkgfSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1335\n");

/***/ }),

/***/ 49211:
/*!***********************************************!*\
  !*** ./src/renderer/context/ThemeContext.tsx ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useTheme = exports.ThemeProvider = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst styles_1 = __webpack_require__(/*! @mui/material/styles */ 278403);\nconst CssBaseline_1 = __importDefault(__webpack_require__(/*! @mui/material/CssBaseline */ 543931));\nconst ThemeContext = (0, react_1.createContext)(undefined);\nconst ThemeProvider = ({ children }) => {\n    const [mode, setMode] = (0, react_1.useState)(() => {\n        // Try to get the saved theme from localStorage\n        const savedTheme = localStorage.getItem('themeMode');\n        return (savedTheme === 'dark' ? 'dark' : 'light');\n    });\n    // Save theme preference to localStorage\n    (0, react_1.useEffect)(() => {\n        localStorage.setItem('themeMode', mode);\n    }, [mode]);\n    const toggleTheme = () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n    };\n    // Create theme based on current mode\n    const theme = react_1.default.useMemo(() => (0, styles_1.createTheme)({\n        palette: {\n            mode,\n            ...(mode === 'light'\n                ? {\n                    // Light mode\n                    primary: {\n                        main: '#2196F3',\n                    },\n                    secondary: {\n                        main: '#21CBF3',\n                    },\n                    background: {\n                        default: '#f8f9fa',\n                        paper: '#ffffff',\n                    },\n                    text: {\n                        primary: '#333333',\n                        secondary: '#666666',\n                    },\n                    divider: '#e0e0e0',\n                }\n                : {\n                    // Dark mode\n                    primary: {\n                        main: '#90caf9',\n                    },\n                    secondary: {\n                        main: '#81deea',\n                    },\n                    background: {\n                        default: '#121212',\n                        paper: '#1e1e1e',\n                    },\n                    text: {\n                        primary: '#e0e0e0',\n                        secondary: '#aaaaaa',\n                    },\n                    divider: '#333333',\n                }),\n        },\n        typography: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        },\n        components: {\n            MuiCssBaseline: {\n                styleOverrides: {\n                    body: {\n                        scrollbarColor: mode === 'dark' ? '#555 #303030' : '#ccc #f5f5f5',\n                        '&::-webkit-scrollbar, & *::-webkit-scrollbar': {\n                            width: '8px',\n                            height: '8px',\n                        },\n                        '&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb': {\n                            backgroundColor: mode === 'dark' ? '#555' : '#ccc',\n                            borderRadius: '4px',\n                        },\n                        '&::-webkit-scrollbar-track, & *::-webkit-scrollbar-track': {\n                            backgroundColor: mode === 'dark' ? '#303030' : '#f5f5f5',\n                        },\n                    },\n                },\n            },\n        },\n    }), [mode]);\n    return ((0, jsx_runtime_1.jsx)(ThemeContext.Provider, { value: { mode, toggleTheme }, children: (0, jsx_runtime_1.jsxs)(styles_1.ThemeProvider, { theme: theme, children: [(0, jsx_runtime_1.jsx)(CssBaseline_1.default, {}), children] }) }));\n};\nexports.ThemeProvider = ThemeProvider;\nconst useTheme = () => {\n    const context = (0, react_1.useContext)(ThemeContext);\n    if (context === undefined) {\n        throw new Error('useTheme must be used within a ThemeProvider');\n    }\n    return context;\n};\nexports.useTheme = useTheme;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///49211\n");

/***/ }),

/***/ 199684:
/*!***********************************************!*\
  !*** ./src/renderer/context/HabitContext.tsx ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useHabits = exports.HabitProvider = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst habit_1 = __webpack_require__(/*! ../types/habit */ 414105);\nconst HabitContext = (0, react_1.createContext)(undefined);\nconst STORAGE_KEY = 'habits';\nconst HabitProvider = ({ children }) => {\n    const [habits, setHabits] = (0, react_1.useState)(() => {\n        try {\n            const savedHabits = localStorage.getItem(STORAGE_KEY);\n            if (!savedHabits)\n                return [];\n            const parsedHabits = JSON.parse(savedHabits);\n            if (!Array.isArray(parsedHabits)) {\n                console.error('Invalid habits data in localStorage');\n                return [];\n            }\n            // Migrate old data if needed\n            return parsedHabits.map((habit) => ({\n                ...habit,\n                updatedAt: habit.updatedAt || habit.createdAt,\n                archived: habit.archived || false,\n                completions: habit.completions.map(completion => ({\n                    ...completion,\n                    completedAt: completion.completedAt || new Date(completion.date).toISOString(),\n                })),\n            }));\n        }\n        catch (error) {\n            console.error('Error loading habits from localStorage:', error);\n            return [];\n        }\n    });\n    const [error, setError] = (0, react_1.useState)(null);\n    (0, react_1.useEffect)(() => {\n        try {\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(habits));\n        }\n        catch (error) {\n            console.error('Error saving habits to localStorage:', error);\n            setError('Failed to save habits. Please try again.');\n        }\n    }, [habits]);\n    const addHabit = (0, react_1.useCallback)((habit) => {\n        setError(null);\n        try {\n            if (habits.length >= habit_1.MAX_HABITS) {\n                setError(`You can't create more than ${habit_1.MAX_HABITS} habits.`);\n                return;\n            }\n            if (habits.some(h => h.name.toLowerCase() === habit.name.toLowerCase())) {\n                setError('A habit with this name already exists.');\n                return;\n            }\n            const validationErrors = (0, habit_1.validateHabit)(habit);\n            if (validationErrors.length > 0) {\n                setError(validationErrors[0].message);\n                return;\n            }\n            const now = new Date().toISOString();\n            const newHabit = {\n                ...habit,\n                id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                createdAt: now,\n                updatedAt: now,\n                completions: [],\n                archived: false,\n            };\n            // Use a timeout to allow any UI animations to complete before updating state\n            setTimeout(() => {\n                setHabits(prev => [...prev, newHabit]);\n            }, 0);\n        }\n        catch (error) {\n            console.error('Error adding habit:', error);\n            setError('Failed to add habit. Please try again.');\n        }\n    }, [habits]);\n    const toggleHabitCompletion = (0, react_1.useCallback)((habitId, date, quantity, notes) => {\n        setError(null);\n        if (!habitId || !date) {\n            setError('Invalid habit or date.');\n            return;\n        }\n        setHabits(prev => prev.map(habit => {\n            if (habit.id === habitId) {\n                const existingCompletion = habit.completions.find(c => c.date === date);\n                let newCompletions;\n                if (existingCompletion) {\n                    // Remove completion if it exists\n                    newCompletions = habit.completions.filter(c => c.date !== date);\n                }\n                else {\n                    // Add new completion\n                    if (habit.completions.length >= habit_1.MAX_COMPLETIONS_PER_HABIT) {\n                        setError('Maximum number of completions reached for this habit.');\n                        return habit;\n                    }\n                    const completion = {\n                        date,\n                        completedAt: new Date().toISOString(),\n                    };\n                    if (habit.trackQuantity && typeof quantity === 'number') {\n                        completion.quantity = quantity;\n                    }\n                    if (notes?.trim()) {\n                        completion.notes = notes.trim();\n                    }\n                    newCompletions = [...habit.completions, completion];\n                }\n                return {\n                    ...habit,\n                    completions: newCompletions,\n                    updatedAt: new Date().toISOString(),\n                };\n            }\n            return habit;\n        }));\n    }, []);\n    const deleteHabit = (0, react_1.useCallback)((habitId) => {\n        setError(null);\n        if (!habitId) {\n            setError('Invalid habit ID.');\n            return;\n        }\n        setHabits(prev => {\n            const habitExists = prev.some(h => h.id === habitId);\n            if (!habitExists) {\n                setError('Habit not found.');\n                return prev;\n            }\n            return prev.filter(habit => habit.id !== habitId);\n        });\n    }, []);\n    const archiveHabit = (0, react_1.useCallback)((habitId) => {\n        setError(null);\n        if (!habitId) {\n            setError('Invalid habit ID.');\n            return;\n        }\n        setHabits(prev => prev.map(habit => {\n            if (habit.id === habitId) {\n                return {\n                    ...habit,\n                    archived: true,\n                    updatedAt: new Date().toISOString(),\n                };\n            }\n            return habit;\n        }));\n    }, []);\n    const getHabitStats = (0, react_1.useCallback)((habitId) => {\n        const habit = habits.find(h => h.id === habitId);\n        if (!habit)\n            return null;\n        const completions = habit.completions;\n        const totalCompletions = completions.length;\n        // Calculate streaks\n        let currentStreak = 0;\n        let longestStreak = 0;\n        let currentCount = 0;\n        // Sort completions by date\n        const sortedDates = completions\n            .map(c => new Date(c.date))\n            .sort((a, b) => b.getTime() - a.getTime());\n        if (sortedDates.length > 0) {\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            let currentDate = new Date(sortedDates[0]);\n            currentDate.setHours(0, 0, 0, 0);\n            // Calculate current streak\n            while (currentDate <= today) {\n                const hasCompletion = sortedDates.some(date => date.getFullYear() === currentDate.getFullYear() &&\n                    date.getMonth() === currentDate.getMonth() &&\n                    date.getDate() === currentDate.getDate());\n                if (hasCompletion) {\n                    currentCount++;\n                }\n                else {\n                    break;\n                }\n                currentDate.setDate(currentDate.getDate() - 1);\n            }\n            currentStreak = currentCount;\n            longestStreak = currentCount;\n            // Calculate longest streak\n            currentCount = 0;\n            for (let i = 0; i < sortedDates.length - 1; i++) {\n                const date1 = sortedDates[i];\n                const date2 = sortedDates[i + 1];\n                const diffDays = Math.round((date1.getTime() - date2.getTime()) / (1000 * 60 * 60 * 24));\n                if (diffDays === 1) {\n                    currentCount++;\n                    longestStreak = Math.max(longestStreak, currentCount);\n                }\n                else {\n                    currentCount = 0;\n                }\n            }\n        }\n        // Calculate completion rate\n        const daysSinceCreation = Math.ceil((new Date().getTime() - new Date(habit.createdAt).getTime()) / (1000 * 60 * 60 * 24));\n        const completionRate = (totalCompletions / daysSinceCreation) * 100;\n        // Calculate quantity stats if applicable\n        let averageQuantity;\n        let totalQuantity;\n        if (habit.trackQuantity) {\n            const quantities = completions\n                .map(c => c.quantity)\n                .filter((q) => typeof q === 'number');\n            if (quantities.length > 0) {\n                totalQuantity = quantities.reduce((sum, q) => sum + q, 0);\n                averageQuantity = totalQuantity / quantities.length;\n            }\n        }\n        return {\n            totalCompletions,\n            currentStreak,\n            longestStreak,\n            completionRate,\n            averageQuantity,\n            totalQuantity,\n            lastCompletionDate: completions.length > 0 ? completions[completions.length - 1].date : undefined,\n        };\n    }, [habits]);\n    const value = react_1.default.useMemo(() => ({\n        habits,\n        addHabit,\n        toggleHabitCompletion,\n        deleteHabit,\n        archiveHabit,\n        getHabitStats,\n        error,\n    }), [habits, addHabit, toggleHabitCompletion, deleteHabit, archiveHabit, getHabitStats, error]);\n    return ((0, jsx_runtime_1.jsx)(HabitContext.Provider, { value: value, children: children }));\n};\nexports.HabitProvider = HabitProvider;\nconst useHabits = () => {\n    const context = (0, react_1.useContext)(HabitContext);\n    if (context === undefined) {\n        throw new Error('useHabits must be used within a HabitProvider');\n    }\n    return context;\n};\nexports.useHabits = useHabits;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///199684\n");

/***/ }),

/***/ 207526:
/*!******************************!*\
  !*** ./src/renderer/App.tsx ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst HabitContext_1 = __webpack_require__(/*! ./context/HabitContext */ 199684);\nconst ThemeContext_1 = __webpack_require__(/*! ./context/ThemeContext */ 49211);\nconst AddHabitDialog_1 = __importDefault(__webpack_require__(/*! ./components/AddHabitDialog */ 675621));\nconst HabitCard_1 = __importDefault(__webpack_require__(/*! ./components/HabitCard */ 587222));\nconst HabitList = () => {\n    const { habits, toggleHabitCompletion, deleteHabit } = (0, HabitContext_1.useHabits)();\n    const { mode, toggleTheme } = (0, ThemeContext_1.useTheme)();\n    const muiTheme = (0, material_1.useTheme)();\n    const [isAddDialogOpen, setIsAddDialogOpen] = (0, react_1.useState)(false);\n    const [isTransitioning, setIsTransitioning] = (0, react_1.useState)(false);\n    const handleOpenDialog = (0, react_1.useCallback)(() => {\n        if (isTransitioning)\n            return;\n        setIsTransitioning(true);\n        setIsAddDialogOpen(true);\n        // Allow transition state to reset after dialog is fully open\n        setTimeout(() => setIsTransitioning(false), 300);\n    }, [isTransitioning]);\n    const handleCloseDialog = (0, react_1.useCallback)(() => {\n        if (isTransitioning)\n            return;\n        setIsTransitioning(true);\n        setIsAddDialogOpen(false);\n        // Allow transition state to reset after dialog is fully closed\n        setTimeout(() => setIsTransitioning(false), 300);\n    }, [isTransitioning]);\n    return ((0, jsx_runtime_1.jsxs)(material_1.Box, { sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: '100vh',\n            bgcolor: 'background.default'\n        }, children: [(0, jsx_runtime_1.jsx)(material_1.AppBar, { position: \"static\", elevation: 0, sx: {\n                    bgcolor: 'background.paper',\n                    borderBottom: '1px solid',\n                    borderColor: 'divider',\n                    color: 'text.primary'\n                }, children: (0, jsx_runtime_1.jsxs)(material_1.Toolbar, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"h5\", component: \"div\", sx: {\n                                flexGrow: 1,\n                                fontWeight: 600,\n                                background: mode === 'light'\n                                    ? 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n                                    : 'linear-gradient(45deg, #90caf9 30%, #81deea 90%)',\n                                WebkitBackgroundClip: 'text',\n                                WebkitTextFillColor: 'transparent'\n                            }, children: \"Habit Tracker\" }), (0, jsx_runtime_1.jsx)(material_1.IconButton, { onClick: toggleTheme, color: \"inherit\", sx: { mr: 2 }, children: mode === 'dark' ? (0, jsx_runtime_1.jsx)(icons_material_1.LightMode, {}) : (0, jsx_runtime_1.jsx)(icons_material_1.DarkMode, {}) }), (0, jsx_runtime_1.jsx)(material_1.Button, { variant: \"contained\", color: \"primary\", startIcon: (0, jsx_runtime_1.jsx)(icons_material_1.Add, {}), onClick: handleOpenDialog, disabled: isTransitioning, sx: {\n                                borderRadius: '20px',\n                                px: 2,\n                                background: mode === 'light'\n                                    ? 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n                                    : 'linear-gradient(45deg, #90caf9 30%, #81deea 90%)',\n                                boxShadow: mode === 'light'\n                                    ? '0 3px 5px 2px rgba(33, 203, 243, .3)'\n                                    : '0 3px 5px 2px rgba(144, 202, 249, .3)',\n                            }, children: \"Add Habit\" })] }) }), (0, jsx_runtime_1.jsx)(material_1.Container, { maxWidth: \"lg\", sx: {\n                    mt: 3,\n                    mb: 4,\n                    flexGrow: 1,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    p: { xs: 1, sm: 2, md: 3 },\n                    overflow: 'hidden',\n                    '&::-webkit-scrollbar': {\n                        display: 'none',\n                    },\n                    scrollbarWidth: 'none',\n                    msOverflowStyle: 'none',\n                }, children: habits.length === 0 ? ((0, jsx_runtime_1.jsxs)(material_1.Box, { sx: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        flexGrow: 1,\n                        textAlign: 'center',\n                        p: 4\n                    }, children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"h5\", color: \"text.secondary\", gutterBottom: true, children: \"No habits yet\" }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"body1\", color: \"text.secondary\", sx: { mb: 3 }, children: \"Start tracking your habits by adding your first habit\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { variant: \"contained\", color: \"primary\", startIcon: (0, jsx_runtime_1.jsx)(icons_material_1.Add, {}), onClick: handleOpenDialog, disabled: isTransitioning, sx: {\n                                borderRadius: '20px',\n                                px: 3,\n                                py: 1,\n                                background: mode === 'light'\n                                    ? 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n                                    : 'linear-gradient(45deg, #90caf9 30%, #81deea 90%)',\n                                boxShadow: mode === 'light'\n                                    ? '0 3px 5px 2px rgba(33, 203, 243, .3)'\n                                    : '0 3px 5px 2px rgba(144, 202, 249, .3)',\n                            }, children: \"Add Your First Habit\" })] })) : ((0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: 0,\n                        flexGrow: 1,\n                        width: '100%',\n                        overflow: 'hidden', // Prevent horizontal scrolling\n                        '& > div': {\n                            maxWidth: '100%',\n                        }\n                    }, children: habits.map((habit) => ((0, jsx_runtime_1.jsx)(HabitCard_1.default, { habit: habit, onToggleCompletion: (date, quantity) => toggleHabitCompletion(habit.id, date, quantity), onDelete: () => deleteHabit(habit.id) }, habit.id))) })) }), (0, jsx_runtime_1.jsx)(AddHabitDialog_1.default, { open: isAddDialogOpen, onClose: handleCloseDialog })] }));\n};\nconst App = () => {\n    return ((0, jsx_runtime_1.jsx)(ThemeContext_1.ThemeProvider, { children: (0, jsx_runtime_1.jsx)(HabitContext_1.HabitProvider, { children: (0, jsx_runtime_1.jsx)(HabitList, {}) }) }));\n};\nexports[\"default\"] = App;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///207526\n");

/***/ }),

/***/ 414105:
/*!*************************************!*\
  !*** ./src/renderer/types/habit.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MAX_COMPLETIONS_PER_HABIT = exports.MAX_UNIT_LENGTH = exports.MAX_DESCRIPTION_LENGTH = exports.MAX_NAME_LENGTH = exports.MAX_HABITS = void 0;\nexports.validateHabit = validateHabit;\nexports.MAX_HABITS = 100;\nexports.MAX_NAME_LENGTH = 50;\nexports.MAX_DESCRIPTION_LENGTH = 200;\nexports.MAX_UNIT_LENGTH = 20;\nexports.MAX_COMPLETIONS_PER_HABIT = 1000;\nfunction validateHabit(habit) {\n    const errors = [];\n    if (!habit.name?.trim()) {\n        errors.push({ field: 'name', message: 'Name is required' });\n    }\n    else if (habit.name.length > exports.MAX_NAME_LENGTH) {\n        errors.push({ field: 'name', message: `Name must be less than ${exports.MAX_NAME_LENGTH} characters` });\n    }\n    if (habit.description && habit.description.length > exports.MAX_DESCRIPTION_LENGTH) {\n        errors.push({ field: 'description', message: `Description must be less than ${exports.MAX_DESCRIPTION_LENGTH} characters` });\n    }\n    if (habit.trackQuantity && !habit.unit?.trim()) {\n        errors.push({ field: 'unit', message: 'Unit is required when tracking quantity' });\n    }\n    else if (habit.unit && habit.unit.length > exports.MAX_UNIT_LENGTH) {\n        errors.push({ field: 'unit', message: `Unit must be less than ${exports.MAX_UNIT_LENGTH} characters` });\n    }\n    if (habit.target) {\n        if (habit.target.value <= 0) {\n            errors.push({ field: 'target', message: 'Target value must be greater than 0' });\n        }\n        if (!['daily', 'weekly', 'monthly'].includes(habit.target.period)) {\n            errors.push({ field: 'target', message: 'Invalid target period' });\n        }\n    }\n    return errors;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE0MTA1LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQyxHQUFHLHVCQUF1QixHQUFHLDhCQUE4QixHQUFHLHVCQUF1QixHQUFHLGtCQUFrQjtBQUMzSSxxQkFBcUI7QUFDckIsa0JBQWtCO0FBQ2xCLHVCQUF1QjtBQUN2Qiw4QkFBOEI7QUFDOUIsdUJBQXVCO0FBQ3ZCLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNENBQTRDO0FBQ2xFO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWtELHlCQUF5QixhQUFhO0FBQzlHO0FBQ0E7QUFDQSxzQkFBc0IsZ0VBQWdFLGdDQUFnQyxhQUFhO0FBQ25JO0FBQ0E7QUFDQSxzQkFBc0IsbUVBQW1FO0FBQ3pGO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWtELHlCQUF5QixhQUFhO0FBQzlHO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpRUFBaUU7QUFDM0Y7QUFDQTtBQUNBLDBCQUEwQixtREFBbUQ7QUFDN0U7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc2NlbnQvLi9zcmMvcmVuZGVyZXIvdHlwZXMvaGFiaXQudHM/YzJlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTUFYX0NPTVBMRVRJT05TX1BFUl9IQUJJVCA9IGV4cG9ydHMuTUFYX1VOSVRfTEVOR1RIID0gZXhwb3J0cy5NQVhfREVTQ1JJUFRJT05fTEVOR1RIID0gZXhwb3J0cy5NQVhfTkFNRV9MRU5HVEggPSBleHBvcnRzLk1BWF9IQUJJVFMgPSB2b2lkIDA7XG5leHBvcnRzLnZhbGlkYXRlSGFiaXQgPSB2YWxpZGF0ZUhhYml0O1xuZXhwb3J0cy5NQVhfSEFCSVRTID0gMTAwO1xuZXhwb3J0cy5NQVhfTkFNRV9MRU5HVEggPSA1MDtcbmV4cG9ydHMuTUFYX0RFU0NSSVBUSU9OX0xFTkdUSCA9IDIwMDtcbmV4cG9ydHMuTUFYX1VOSVRfTEVOR1RIID0gMjA7XG5leHBvcnRzLk1BWF9DT01QTEVUSU9OU19QRVJfSEFCSVQgPSAxMDAwO1xuZnVuY3Rpb24gdmFsaWRhdGVIYWJpdChoYWJpdCkge1xuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgIGlmICghaGFiaXQubmFtZT8udHJpbSgpKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHsgZmllbGQ6ICduYW1lJywgbWVzc2FnZTogJ05hbWUgaXMgcmVxdWlyZWQnIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChoYWJpdC5uYW1lLmxlbmd0aCA+IGV4cG9ydHMuTUFYX05BTUVfTEVOR1RIKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHsgZmllbGQ6ICduYW1lJywgbWVzc2FnZTogYE5hbWUgbXVzdCBiZSBsZXNzIHRoYW4gJHtleHBvcnRzLk1BWF9OQU1FX0xFTkdUSH0gY2hhcmFjdGVyc2AgfSk7XG4gICAgfVxuICAgIGlmIChoYWJpdC5kZXNjcmlwdGlvbiAmJiBoYWJpdC5kZXNjcmlwdGlvbi5sZW5ndGggPiBleHBvcnRzLk1BWF9ERVNDUklQVElPTl9MRU5HVEgpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goeyBmaWVsZDogJ2Rlc2NyaXB0aW9uJywgbWVzc2FnZTogYERlc2NyaXB0aW9uIG11c3QgYmUgbGVzcyB0aGFuICR7ZXhwb3J0cy5NQVhfREVTQ1JJUFRJT05fTEVOR1RIfSBjaGFyYWN0ZXJzYCB9KTtcbiAgICB9XG4gICAgaWYgKGhhYml0LnRyYWNrUXVhbnRpdHkgJiYgIWhhYml0LnVuaXQ/LnRyaW0oKSkge1xuICAgICAgICBlcnJvcnMucHVzaCh7IGZpZWxkOiAndW5pdCcsIG1lc3NhZ2U6ICdVbml0IGlzIHJlcXVpcmVkIHdoZW4gdHJhY2tpbmcgcXVhbnRpdHknIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChoYWJpdC51bml0ICYmIGhhYml0LnVuaXQubGVuZ3RoID4gZXhwb3J0cy5NQVhfVU5JVF9MRU5HVEgpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goeyBmaWVsZDogJ3VuaXQnLCBtZXNzYWdlOiBgVW5pdCBtdXN0IGJlIGxlc3MgdGhhbiAke2V4cG9ydHMuTUFYX1VOSVRfTEVOR1RIfSBjaGFyYWN0ZXJzYCB9KTtcbiAgICB9XG4gICAgaWYgKGhhYml0LnRhcmdldCkge1xuICAgICAgICBpZiAoaGFiaXQudGFyZ2V0LnZhbHVlIDw9IDApIHtcbiAgICAgICAgICAgIGVycm9ycy5wdXNoKHsgZmllbGQ6ICd0YXJnZXQnLCBtZXNzYWdlOiAnVGFyZ2V0IHZhbHVlIG11c3QgYmUgZ3JlYXRlciB0aGFuIDAnIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICghWydkYWlseScsICd3ZWVrbHknLCAnbW9udGhseSddLmluY2x1ZGVzKGhhYml0LnRhcmdldC5wZXJpb2QpKSB7XG4gICAgICAgICAgICBlcnJvcnMucHVzaCh7IGZpZWxkOiAndGFyZ2V0JywgbWVzc2FnZTogJ0ludmFsaWQgdGFyZ2V0IHBlcmlvZCcgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGVycm9ycztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///414105\n");

/***/ }),

/***/ 587222:
/*!***********************************************!*\
  !*** ./src/renderer/components/HabitCard.tsx ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst date_fns_1 = __webpack_require__(/*! date-fns */ 917705);\nconst ThemeContext_1 = __webpack_require__(/*! ../context/ThemeContext */ 49211);\nconst styles_1 = __webpack_require__(/*! @mui/material/styles */ 278403);\nconst HabitCard = ({ habit, onToggleCompletion, onDelete }) => {\n    const { mode } = (0, ThemeContext_1.useTheme)();\n    const muiTheme = (0, styles_1.useTheme)();\n    const isSmallScreen = (0, material_1.useMediaQuery)(muiTheme.breakpoints.down('sm'));\n    const [isLogDialogOpen, setIsLogDialogOpen] = (0, react_1.useState)(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = (0, react_1.useState)(false);\n    const [selectedDate, setSelectedDate] = (0, react_1.useState)(new Date());\n    const [quantity, setQuantity] = (0, react_1.useState)('');\n    const [useCheckbox, setUseCheckbox] = (0, react_1.useState)(true);\n    const [selectedYear, setSelectedYear] = (0, react_1.useState)(new Date().getFullYear());\n    const [hoveredDate, setHoveredDate] = (0, react_1.useState)(null);\n    // Define constants first\n    const CELL_GAP = 1; // Minimum gap for compact layout\n    const WEEKDAY_LABEL_WIDTH = 15; // Smaller width for weekday labels\n    // Debug function to log grid information\n    const debugGridInfo = (0, react_1.useCallback)((grid) => {\n        const totalWeeks = grid.length;\n        const daysInFullYear = new Date(selectedYear, 0, 0).getDate() === 366 ? 366 : 365;\n        const daysInCurrentYear = grid.flat().filter(date => date.getFullYear() === selectedYear).length;\n        const jan1 = grid.flat().find(date => date.getFullYear() === selectedYear && date.getMonth() === 0 && date.getDate() === 1);\n        const dec31 = grid.flat().find(date => date.getFullYear() === selectedYear && date.getMonth() === 11 && date.getDate() === 31);\n        console.log(`Grid for ${selectedYear}: ${totalWeeks} weeks × 7 days`);\n        console.log(`Days in year: ${daysInFullYear}, days displayed from year: ${daysInCurrentYear}`);\n        console.log(`Jan 1 present: ${!!jan1}, Dec 31 present: ${!!dec31}`);\n        // Check if the grid is 52 or 53 weeks (standard for a year)\n        const isStandardSize = totalWeeks >= 52 && totalWeeks <= 53;\n        console.log(`Grid size check: ${isStandardSize ? 'PASSED' : 'FAILED'} - ${totalWeeks} weeks (should be 52-53)`);\n        return {\n            size: totalWeeks,\n            daysInYear: daysInCurrentYear,\n            hasJan1: !!jan1,\n            hasDec31: !!dec31,\n            isCorrectSize: isStandardSize\n        };\n    }, [selectedYear]);\n    // Build grid: grid[col][row] = date or null\n    // Col = week, Row = weekday\n    const grid = (0, react_1.useMemo)(() => {\n        // Get the start and end dates for the year\n        const jan1 = new Date(selectedYear, 0, 1);\n        const dec31 = new Date(selectedYear, 11, 31);\n        // Find the first Sunday before or on Jan 1\n        const firstDayOfGrid = new Date(jan1);\n        const firstDayOfWeek = (0, date_fns_1.getDay)(firstDayOfGrid);\n        firstDayOfGrid.setDate(firstDayOfGrid.getDate() - firstDayOfWeek);\n        // Find the last Saturday after or on Dec 31\n        const lastDayOfGrid = new Date(dec31);\n        const lastDayOfWeek = (0, date_fns_1.getDay)(lastDayOfGrid);\n        lastDayOfGrid.setDate(lastDayOfGrid.getDate() + (6 - lastDayOfWeek));\n        // Calculate the total number of weeks\n        const totalWeeks = Math.ceil((lastDayOfGrid.getTime() - firstDayOfGrid.getTime()) / (7 * 24 * 60 * 60 * 1000));\n        // Create the grid with the correct number of weeks\n        const newGrid = [];\n        // Start with the first day of the grid\n        let currentDate = new Date(firstDayOfGrid);\n        // Generate all weeks\n        for (let week = 0; week < totalWeeks; week++) {\n            const weekRow = [];\n            // Generate days for each week\n            for (let day = 0; day < 7; day++) {\n                weekRow.push(new Date(currentDate));\n                currentDate.setDate(currentDate.getDate() + 1);\n            }\n            newGrid.push(weekRow);\n        }\n        // Check if December 31st is included in the grid\n        const hasDec31 = newGrid.flat().some(date => date.getFullYear() === selectedYear && date.getMonth() === 11 && date.getDate() === 31);\n        // If December 31st is missing, add additional weeks until we include it\n        if (!hasDec31) {\n            console.warn(`December 31st, ${selectedYear} is missing from the grid. Extending grid.`);\n            // Continue where we left off\n            let additionalDate = new Date(currentDate);\n            // Add up to 4 additional weeks (should be enough in all cases)\n            for (let week = 0; week < 4; week++) {\n                const weekRow = [];\n                for (let day = 0; day < 7; day++) {\n                    weekRow.push(new Date(additionalDate));\n                    additionalDate.setDate(additionalDate.getDate() + 1);\n                    // Check if we've now included December 31st\n                    if (additionalDate.getFullYear() === selectedYear + 1) {\n                        const hasDec31Now = newGrid.flat().concat(weekRow).some(date => date.getFullYear() === selectedYear && date.getMonth() === 11 && date.getDate() === 31);\n                        if (hasDec31Now) {\n                            break;\n                        }\n                    }\n                }\n                newGrid.push(weekRow);\n                // Check if December 31st is now in the grid after adding this week\n                const containsDec31 = newGrid.flat().some(date => date.getFullYear() === selectedYear && date.getMonth() === 11 && date.getDate() === 31);\n                if (containsDec31) {\n                    console.log(`Grid extended. December 31st, ${selectedYear} is now included.`);\n                    break;\n                }\n            }\n        }\n        // Count days in the current year for debugging\n        const daysInYear = new Date(selectedYear, 1, 29).getDate() === 29 ? 366 : 365;\n        const daysInCurrentYear = newGrid.flat().filter(date => date.getFullYear() === selectedYear).length;\n        // Log debug info\n        console.log(`Calendar grid for ${selectedYear}: ${newGrid.length} weeks (${newGrid.length}x7), ${daysInCurrentYear}/${daysInYear} days in year`);\n        console.log(`First date in grid: ${(0, date_fns_1.format)(newGrid[0][0], 'yyyy-MM-dd')}`);\n        console.log(`Last date in grid: ${(0, date_fns_1.format)(newGrid[newGrid.length - 1][6], 'yyyy-MM-dd')}`);\n        return newGrid;\n    }, [selectedYear]);\n    // Define dynamic cell size based on available width\n    const calculateCellSize = (0, react_1.useCallback)(() => {\n        // Calculate available width, accounting for padding and labels\n        const isSmallScreen = window.innerWidth < 600;\n        const isMediumScreen = window.innerWidth >= 600 && window.innerWidth < 960;\n        // Reduce padding on smaller screens to maximize space for the grid\n        const containerPadding = isSmallScreen ? 20 : isMediumScreen ? 40 : 60;\n        const availableWidth = Math.min(window.innerWidth - containerPadding, 1100);\n        // Account for weekday labels\n        const effectiveWidth = availableWidth - WEEKDAY_LABEL_WIDTH;\n        // Calculate cell size based on available width and total weeks\n        // We need to fit all 53 weeks (max in a year) plus gaps\n        const totalWeeks = grid.length;\n        const totalGaps = totalWeeks - 1;\n        // Calculate cell size\n        const cellSize = (effectiveWidth - (totalGaps * CELL_GAP)) / totalWeeks;\n        // Clamp to reasonable size range\n        return Math.max(Math.min(Math.floor(cellSize * 10) / 10, 10), 2.8);\n    }, [grid]);\n    // Calculate cell size and update on window resize\n    const [CELL_SIZE, setCellSize] = (0, react_1.useState)(() => calculateCellSize());\n    (0, react_1.useEffect)(() => {\n        // Update cell size on window resize\n        const handleResize = () => {\n            setCellSize(calculateCellSize());\n        };\n        // Initial calculation\n        setCellSize(calculateCellSize());\n        // Debug grid information\n        debugGridInfo(grid);\n        // Add resize event listener\n        window.addEventListener('resize', handleResize);\n        // Cleanup\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [calculateCellSize, grid, debugGridInfo]);\n    // Simple month labels positioned at exact 4-column intervals\n    const monthLabels = (0, react_1.useMemo)(() => {\n        // Define the month names\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        // Find the column index for the first day of the selected year\n        let startColumn = 0;\n        // Create the labels at exact 4-column intervals\n        const spacing = 4; // Exactly 4 columns apart\n        const labels = [];\n        for (let i = 0; i < monthNames.length; i++) {\n            const col = startColumn + (i * spacing);\n            // If we've gone beyond the grid, stop adding labels\n            if (col >= grid.length)\n                break;\n            labels.push({\n                month: monthNames[i],\n                col // Using 'col' for consistency with existing code\n            });\n        }\n        return labels;\n    }, [grid, selectedYear]);\n    const isHabitCompleted = (0, react_1.useCallback)((date) => {\n        return habit.completions.some(completion => completion.date === (0, date_fns_1.format)(date, 'yyyy-MM-dd'));\n    }, [habit.completions]);\n    const calculateStreak = (0, react_1.useCallback)(() => {\n        let streak = 0;\n        const today = new Date();\n        let currentDate = new Date();\n        while (isHabitCompleted(currentDate) && !(0, date_fns_1.isAfter)(currentDate, today)) {\n            streak++;\n            currentDate.setDate(currentDate.getDate() - 1);\n        }\n        return streak;\n    }, [isHabitCompleted]);\n    const handleLogSubmit = (0, react_1.useCallback)(() => {\n        // For habits that track quantity, use the quantity value\n        if (habit.trackQuantity) {\n            if (quantity !== '') {\n                onToggleCompletion((0, date_fns_1.format)(selectedDate, 'yyyy-MM-dd'), Number(quantity));\n            }\n        }\n        else {\n            // For non-quantity habits, always mark as completed\n            onToggleCompletion((0, date_fns_1.format)(selectedDate, 'yyyy-MM-dd'));\n        }\n        setIsLogDialogOpen(false);\n        setQuantity('');\n        setUseCheckbox(true);\n    }, [habit.trackQuantity, selectedDate, quantity, onToggleCompletion]);\n    const handleDayClick = (0, react_1.useCallback)((day) => {\n        if ((0, date_fns_1.isAfter)(day, new Date())) {\n            return; // Don't allow logging future dates\n        }\n        setSelectedDate(day);\n        setIsLogDialogOpen(true);\n    }, []);\n    const streak = (0, react_1.useMemo)(() => calculateStreak(), [calculateStreak]);\n    const isDayCompleted = (0, react_1.useCallback)((date) => {\n        return habit.completions.some(completion => completion.date === (0, date_fns_1.format)(date, 'yyyy-MM-dd'));\n    }, [habit.completions]);\n    const handlePrevYear = (0, react_1.useCallback)(() => {\n        setSelectedYear(prev => prev - 1);\n    }, []);\n    const handleNextYear = (0, react_1.useCallback)(() => {\n        setSelectedYear(prev => prev + 1);\n    }, []);\n    // Get completion for a specific date\n    const getCompletion = (0, react_1.useCallback)((date) => {\n        const dateStr = (0, date_fns_1.format)(date, 'yyyy-MM-dd');\n        return habit.completions.find(c => c.date === dateStr);\n    }, [habit.completions]);\n    return ((0, jsx_runtime_1.jsx)(material_1.Paper, { elevation: 0, sx: {\n            p: { xs: 1, sm: 1.5, md: 2 },\n            pb: 1.5,\n            mb: 3,\n            bgcolor: 'background.paper',\n            display: 'flex',\n            flexDirection: 'column',\n            border: '1px solid',\n            borderColor: 'divider',\n            borderRadius: '8px',\n            boxShadow: mode === 'dark'\n                ? '0 3px 10px rgba(0,0,0,0.35)'\n                : '0 3px 10px rgba(0,0,0,0.08)',\n            width: '100%',\n            maxWidth: '100%',\n            position: 'relative',\n            overflow: 'hidden'\n        }, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: {\n                width: '100%',\n                mx: 'auto',\n                mb: 1,\n                position: 'relative',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            }, children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"h5\", align: \"center\", noWrap: true, title: habit.name, sx: {\n                        mt: 0.5,\n                        mb: 1.5,\n                        width: '100%',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        color: habit.color,\n                        fontWeight: 600,\n                        letterSpacing: '0.01em',\n                        textShadow: mode === 'dark'\n                            ? '0 1px 2px rgba(0,0,0,0.3)'\n                            : '0 1px 1px rgba(0,0,0,0.1)',\n                        fontSize: '1.3rem',\n                        borderBottom: `2px solid ${habit.color}33`,\n                        paddingBottom: 0.75,\n                        position: 'relative',\n                        '&::after': {\n                            content: '\"\"',\n                            position: 'absolute',\n                            bottom: '-2px',\n                            left: 0,\n                            width: '100%',\n                            borderBottom: `2px solid ${habit.color}33`,\n                        }\n                    }, children: habit.name }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        mb: 1,\n                        px: 1,\n                    }, children: [(0, jsx_runtime_1.jsx)(material_1.Box, { sx: { display: 'flex', alignItems: 'center' }, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center' }, children: [(0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", onClick: handlePrevYear, sx: { color: 'text.primary', p: 0.7 }, children: (0, jsx_runtime_1.jsx)(icons_material_1.ChevronLeft, { fontSize: \"small\" }) }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"body2\", sx: {\n                                            mx: 0.7,\n                                            fontWeight: 'bold',\n                                            color: 'text.primary',\n                                            fontSize: '0.9rem'\n                                        }, children: selectedYear }), (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", onClick: handleNextYear, disabled: selectedYear >= new Date().getFullYear(), sx: { color: 'text.primary', p: 0.7 }, children: (0, jsx_runtime_1.jsx)(icons_material_1.ChevronRight, { fontSize: \"small\" }) })] }) }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center', gap: 0.7 }, children: [(0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: `Current streak: ${streak} days`, children: (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: \"body2\", color: \"text.secondary\", sx: {\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            fontSize: '0.9rem'\n                                        }, children: [\"\\uD83D\\uDD25 \", (0, jsx_runtime_1.jsx)(\"span\", { style: { fontWeight: 'bold', marginLeft: '3px' }, children: streak })] }) }), (0, jsx_runtime_1.jsx)(material_1.Button, { variant: \"contained\", size: \"small\", startIcon: (0, jsx_runtime_1.jsx)(icons_material_1.Add, { fontSize: \"small\" }), onClick: () => {\n                                        setSelectedDate(new Date());\n                                        setIsLogDialogOpen(true);\n                                    }, sx: {\n                                        py: 0.5,\n                                        px: 1.5,\n                                        minWidth: '55px',\n                                        fontSize: '0.8rem',\n                                        bgcolor: `${habit.color}99`,\n                                        '&:hover': {\n                                            bgcolor: `${habit.color}cc`,\n                                        }\n                                    }, children: \"Log\" }), (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", color: \"error\", onClick: () => setIsDeleteDialogOpen(true), sx: { p: 0.7 }, children: (0, jsx_runtime_1.jsx)(icons_material_1.Delete, { fontSize: \"small\" }) })] })] }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: {\n                        width: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center', // Center the calendar horizontally\n                        position: 'relative',\n                        mt: 0.5,\n                        mb: 0.5,\n                        transform: `scale(${grid.length > 53 ? 0.95 : 1})`, // Slight scale down if many weeks\n                        transformOrigin: 'center top'\n                    }, children: [(0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                display: 'flex',\n                                width: `calc(${grid.length * (CELL_SIZE + CELL_GAP)}px)`,\n                                mb: 0.8,\n                                ml: `${WEEKDAY_LABEL_WIDTH}px`,\n                                position: 'relative',\n                                height: '20px'\n                            }, children: monthLabels.map((label, idx) => ((0, jsx_runtime_1.jsxs)(material_1.Box, { sx: {\n                                    position: 'absolute',\n                                    left: `${label.col * (CELL_SIZE + CELL_GAP)}px`,\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    alignItems: 'center',\n                                    width: CELL_SIZE * 3, // Make label wider\n                                    transform: 'translateX(-33%)', // Center above the column\n                                }, children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: {\n                                            fontSize: '0.65rem',\n                                            color: 'text.primary',\n                                            fontWeight: '600',\n                                            bgcolor: mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.04)',\n                                            px: 1,\n                                            py: 0.3,\n                                            borderRadius: '10px',\n                                            border: '1px solid',\n                                            borderColor: mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.08)',\n                                        }, children: label.month }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: {\n                                            display: 'grid',\n                                            gridTemplateColumns: `${WEEKDAY_LABEL_WIDTH}px repeat(${grid.length}, ${CELL_SIZE}px)`,\n                                            gridTemplateRows: `repeat(7, ${CELL_SIZE}px)`,\n                                            gap: CELL_GAP,\n                                            mb: 0,\n                                            maxWidth: '100%',\n                                            justifyContent: 'center', // Center the grid horizontally\n                                            paddingBottom: '1px'\n                                        }, children: [[0, 1, 2, 3, 4, 5, 6].map((weekday) => ((0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                                    gridColumn: 1,\n                                                    gridRow: weekday + 1,\n                                                    justifySelf: 'end',\n                                                    pr: 0.3,\n                                                    width: WEEKDAY_LABEL_WIDTH - 2,\n                                                    height: CELL_SIZE,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent: 'flex-end',\n                                                    bgcolor: mode === 'dark' ? 'background.paper' : 'background.paper'\n                                                }, children: (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: {\n                                                        fontSize: CELL_SIZE < 4 ? '0.5rem' : '0.55rem',\n                                                        color: 'text.secondary',\n                                                        lineHeight: 1\n                                                    }, children: ['S', 'M', 'T', 'W', 'T', 'F', 'S'][weekday] }) }, weekday))), grid.map((weekColumn, colIdx) => (weekColumn.map((day, rowIdx) => {\n                                                // Get the date for this cell position from our grid\n                                                const cellDate = day;\n                                                // Check if this cell's date is in the current year\n                                                const isInCurrentYear = cellDate.getFullYear() === selectedYear;\n                                                // Check if this is the first day of a month\n                                                const isFirstDayOfMonth = cellDate.getDate() === 1;\n                                                const isCompleted = isDayCompleted(cellDate);\n                                                const isFuture = (0, date_fns_1.isAfter)(cellDate, new Date());\n                                                const isCurrentDay = (0, date_fns_1.isToday)(cellDate);\n                                                // Get completion details for tooltip\n                                                const completion = getCompletion(cellDate);\n                                                // Format date for tooltip\n                                                const formattedDate = (0, date_fns_1.format)(cellDate, 'EEEE, MMMM d, yyyy');\n                                                // Tooltip content\n                                                const tooltipContent = isInCurrentYear\n                                                    ? (isCompleted\n                                                        ? `${formattedDate}${completion?.quantity ? ` • ${completion.quantity} ${habit.unit || 'units'}` : ' • Completed'}`\n                                                        : formattedDate)\n                                                    : '';\n                                                // Scale cell border based on cell size\n                                                const borderWidth = CELL_SIZE > 5 ? 1 : 0.5;\n                                                return ((0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: tooltipContent, placement: \"top\", enterDelay: 500, arrow: true, disableHoverListener: !isInCurrentYear, children: (0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                                            gridColumn: colIdx + 2, // +2 because first column is for weekday labels\n                                                            gridRow: rowIdx + 1,\n                                                            width: CELL_SIZE,\n                                                            height: CELL_SIZE,\n                                                            bgcolor: isCompleted && isInCurrentYear\n                                                                ? habit.color + (mode === 'dark' ? 'cc' : 'bb')\n                                                                : mode === 'dark'\n                                                                    ? (isInCurrentYear ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0)')\n                                                                    : (isInCurrentYear ? 'transparent' : 'rgba(0,0,0,0)'),\n                                                            border: isInCurrentYear\n                                                                ? `${borderWidth}px solid ${mode === 'dark' ? '#444' : '#e0e0e0'}`\n                                                                : 'none',\n                                                            borderRadius: CELL_SIZE > 5 ? '1px' : '0px',\n                                                            cursor: (isFuture || !isInCurrentYear) ? 'default' : 'pointer',\n                                                            opacity: isFuture ? 0.3 : (isInCurrentYear ? 1 : 0.2),\n                                                            transition: 'background-color 0.2s, transform 0.15s',\n                                                            // Highlight first day of each month with stronger border\n                                                            borderLeft: isFirstDayOfMonth && isInCurrentYear\n                                                                ? `${borderWidth + 0.5}px solid ${mode === 'dark' ? 'rgba(255,255,255,0.4)' : 'rgba(0,0,0,0.4)'}`\n                                                                : undefined,\n                                                            // Highlight current day\n                                                            ...(isCurrentDay && {\n                                                                boxShadow: `0 0 0 ${borderWidth + 0.5}px ${habit.color}`\n                                                            }),\n                                                            // Hover effect for larger cells\n                                                            '&:hover': CELL_SIZE > 4 && isInCurrentYear && !isFuture ? {\n                                                                transform: 'scale(1.2)',\n                                                                zIndex: 10,\n                                                                boxShadow: `0 2px 4px rgba(0,0,0,0.2)`,\n                                                                bgcolor: isCompleted\n                                                                    ? habit.color + 'ee'\n                                                                    : mode === 'dark' ? 'rgba(255,255,255,0.15)' : 'rgba(0,0,0,0.05)'\n                                                            } : {},\n                                                            position: 'relative',\n                                                        }, onClick: () => isInCurrentYear && !isFuture && handleDayClick(cellDate), onMouseEnter: () => setHoveredDate(cellDate), onMouseLeave: () => setHoveredDate(null) }) }, `cell-${colIdx}-${rowIdx}`));\n                                            })))] })] }, idx))) }), (0, jsx_runtime_1.jsxs)(material_1.Dialog, { open: isLogDialogOpen, onClose: () => setIsLogDialogOpen(false), maxWidth: \"xs\", fullWidth: true, PaperProps: {\n                                sx: {\n                                    borderRadius: '12px',\n                                    boxShadow: mode === 'dark'\n                                        ? '0 8px 30px rgba(0,0,0,0.5)'\n                                        : '0 8px 30px rgba(0,0,0,0.12)',\n                                    overflow: 'hidden',\n                                    bgcolor: 'background.paper',\n                                }\n                            }, children: [(0, jsx_runtime_1.jsxs)(material_1.DialogTitle, { sx: {\n                                        borderBottom: '1px solid',\n                                        borderColor: 'divider',\n                                        pb: 2,\n                                        background: `linear-gradient(45deg, ${habit.color} 30%, ${habit.color}99 90%)`,\n                                        color: '#fff',\n                                    }, children: [\"Log \", habit.name] }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { sx: { bgcolor: 'background.paper' }, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { mt: 2 }, children: [(0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: \"subtitle2\", gutterBottom: true, color: \"text.primary\", children: [\"Date: \", (0, date_fns_1.format)(selectedDate, 'MMMM d, yyyy')] }), !habit.trackQuantity ? ((0, jsx_runtime_1.jsx)(material_1.FormControlLabel, { control: (0, jsx_runtime_1.jsx)(material_1.Checkbox, { checked: useCheckbox, onChange: (e) => setUseCheckbox(e.target.checked), sx: {\n                                                        color: habit.color,\n                                                        '&.Mui-checked': {\n                                                            color: habit.color,\n                                                        }\n                                                    } }), label: (0, jsx_runtime_1.jsx)(material_1.Typography, { color: \"text.primary\", children: \"Mark as completed\" }) })) : (\n                                            // For habits that track quantity, always show the quantity field\n                                            (0, jsx_runtime_1.jsx)(material_1.TextField, { fullWidth: true, type: \"number\", label: `Quantity${habit.unit ? ` (${habit.unit})` : ''}`, value: quantity, onChange: (e) => {\n                                                    const val = e.target.value;\n                                                    if (val === '' || (Number(val) >= 0 && Number(val) <= 1000000)) {\n                                                        setQuantity(val === '' ? '' : Number(val));\n                                                    }\n                                                }, sx: {\n                                                    mt: 1,\n                                                    '& .MuiOutlinedInput-root': {\n                                                        '&.Mui-focused fieldset': {\n                                                            borderColor: habit.color,\n                                                        },\n                                                    },\n                                                    '& .MuiInputLabel-root.Mui-focused': {\n                                                        color: habit.color,\n                                                    },\n                                                }, inputProps: {\n                                                    min: 0,\n                                                    max: 1000000,\n                                                } }))] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { sx: { px: 3, py: 2, borderTop: '1px solid', borderColor: 'divider', bgcolor: 'background.paper' }, children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => setIsLogDialogOpen(false), sx: { borderRadius: '20px', px: 2 }, children: \"Cancel\" }), isDayCompleted(selectedDate) && ((0, jsx_runtime_1.jsx)(material_1.Button, { color: \"warning\", onClick: () => {\n                                                onToggleCompletion((0, date_fns_1.format)(selectedDate, 'yyyy-MM-dd'));\n                                                setIsLogDialogOpen(false);\n                                            }, sx: { borderRadius: '20px', px: 2 }, children: \"Undo\" })), (0, jsx_runtime_1.jsx)(material_1.Button, { onClick: handleLogSubmit, variant: \"contained\", disabled: habit.trackQuantity && quantity === '', sx: {\n                                                borderRadius: '20px',\n                                                px: 2,\n                                                background: `linear-gradient(45deg, ${habit.color} 30%, ${habit.color}99 90%)`,\n                                                boxShadow: `0 3px 5px 2px ${habit.color}33`,\n                                            }, children: \"Save\" })] })] }), (0, jsx_runtime_1.jsxs)(material_1.Dialog, { open: isDeleteDialogOpen, onClose: () => setIsDeleteDialogOpen(false), maxWidth: \"xs\", fullWidth: true, PaperProps: {\n                                sx: {\n                                    borderRadius: '12px',\n                                    boxShadow: mode === 'dark'\n                                        ? '0 8px 30px rgba(0,0,0,0.5)'\n                                        : '0 8px 30px rgba(0,0,0,0.12)',\n                                    overflow: 'hidden',\n                                    bgcolor: 'background.paper',\n                                }\n                            }, children: [(0, jsx_runtime_1.jsx)(material_1.DialogTitle, { sx: {\n                                        borderBottom: '1px solid',\n                                        borderColor: 'divider',\n                                        pb: 2,\n                                        bgcolor: mode === 'dark' ? '#3a0505' : '#ffebee', // Dark/light red background\n                                        color: mode === 'dark' ? '#ff5252' : '#d32f2f',\n                                    }, children: \"Delete Habit\" }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { sx: { mt: 2, bgcolor: 'background.paper' }, children: (0, jsx_runtime_1.jsxs)(material_1.Typography, { color: \"text.primary\", children: [\"Are you sure you want to delete \\\"\", habit.name, \"\\\"? This action cannot be undone.\"] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { sx: { px: 3, py: 2, borderTop: '1px solid', borderColor: 'divider', bgcolor: 'background.paper' }, children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => setIsDeleteDialogOpen(false), sx: { borderRadius: '20px', px: 2 }, children: \"Cancel\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => {\n                                                onDelete();\n                                                setIsDeleteDialogOpen(false);\n                                            }, color: \"error\", variant: \"contained\", sx: { borderRadius: '20px', px: 2 }, children: \"Delete\" })] })] })] }), \"); }; export default HabitCard; \"] }) }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///587222\n");

/***/ }),

/***/ 675621:
/*!****************************************************!*\
  !*** ./src/renderer/components/AddHabitDialog.tsx ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst HabitContext_1 = __webpack_require__(/*! ../context/HabitContext */ 199684);\nconst ThemeContext_1 = __webpack_require__(/*! ../context/ThemeContext */ 49211);\nconst AddHabitDialog = ({ open, onClose }) => {\n    const { mode } = (0, ThemeContext_1.useTheme)();\n    const muiTheme = (0, material_1.useTheme)();\n    const { addHabit, error: contextError } = (0, HabitContext_1.useHabits)();\n    const [name, setName] = (0, react_1.useState)('');\n    const [description, setDescription] = (0, react_1.useState)('');\n    const [frequency] = (0, react_1.useState)('daily');\n    const [color, setColor] = (0, react_1.useState)('#1976d2');\n    const [trackQuantity, setTrackQuantity] = (0, react_1.useState)(false);\n    const [unit, setUnit] = (0, react_1.useState)('');\n    const [validationError, setValidationError] = (0, react_1.useState)(null);\n    const [isSubmitting, setIsSubmitting] = (0, react_1.useState)(false);\n    const resetForm = (0, react_1.useCallback)(() => {\n        setName('');\n        setDescription('');\n        setColor('#1976d2');\n        setTrackQuantity(false);\n        setUnit('');\n        setValidationError(null);\n    }, []);\n    (0, react_1.useEffect)(() => {\n        if (!open) {\n            const timer = setTimeout(() => {\n                resetForm();\n                setIsSubmitting(false);\n            }, 300);\n            return () => clearTimeout(timer);\n        }\n    }, [open, resetForm]);\n    const handleClose = (0, react_1.useCallback)(() => {\n        if (isSubmitting)\n            return;\n        onClose();\n    }, [onClose, isSubmitting]);\n    const validateForm = (0, react_1.useCallback)(() => {\n        if (!name.trim()) {\n            setValidationError('Habit name is required');\n            return false;\n        }\n        if (name.trim().length > 50) {\n            setValidationError('Habit name must be less than 50 characters');\n            return false;\n        }\n        if (description.length > 200) {\n            setValidationError('Description must be less than 200 characters');\n            return false;\n        }\n        if (trackQuantity && !unit.trim()) {\n            setValidationError('Unit is required when tracking quantity');\n            return false;\n        }\n        if (trackQuantity && unit.trim().length > 20) {\n            setValidationError('Unit must be less than 20 characters');\n            return false;\n        }\n        setValidationError(null);\n        return true;\n    }, [name, description, trackQuantity, unit]);\n    const handleSubmit = (0, react_1.useCallback)((e) => {\n        e.preventDefault();\n        if (!validateForm() || isSubmitting) {\n            return;\n        }\n        setIsSubmitting(true);\n        addHabit({\n            name: name.trim(),\n            description: description.trim(),\n            frequency,\n            color,\n            trackQuantity,\n            unit: trackQuantity ? unit.trim() : undefined,\n        });\n        setTimeout(() => {\n            onClose();\n            setIsSubmitting(false);\n        }, 50);\n    }, [name, description, frequency, color, trackQuantity, unit, addHabit, onClose, validateForm, isSubmitting]);\n    return ((0, jsx_runtime_1.jsx)(material_1.Dialog, { open: open, onClose: handleClose, maxWidth: \"sm\", fullWidth: true, PaperProps: {\n            sx: {\n                minHeight: '50vh',\n                borderRadius: '12px',\n                boxShadow: mode === 'dark'\n                    ? '0 8px 30px rgba(0,0,0,0.5)'\n                    : '0 8px 30px rgba(0,0,0,0.12)',\n                overflow: 'hidden',\n                bgcolor: 'background.paper',\n            }\n        }, TransitionProps: {\n            onExited: resetForm\n        }, children: (0, jsx_runtime_1.jsxs)(\"form\", { onSubmit: handleSubmit, children: [(0, jsx_runtime_1.jsx)(material_1.DialogTitle, { sx: {\n                        borderBottom: '1px solid',\n                        borderColor: 'divider',\n                        pb: 2,\n                        background: mode === 'light'\n                            ? 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n                            : 'linear-gradient(45deg, #90caf9 30%, #81deea 90%)',\n                        color: 'white',\n                    }, children: \"Add New Habit\" }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { sx: { mt: 2, bgcolor: 'background.paper' }, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', flexDirection: 'column', gap: 2, mt: 1 }, children: [(validationError || contextError) && ((0, jsx_runtime_1.jsx)(material_1.Alert, { severity: \"error\", sx: { mb: 2 }, children: validationError || contextError })), (0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Habit Name\", value: name, onChange: (e) => setName(e.target.value), required: true, fullWidth: true, error: !!validationError && validationError.includes('name'), helperText: `${name.length}/50 characters`, InputProps: {\n                                    endAdornment: ((0, jsx_runtime_1.jsx)(material_1.InputAdornment, { position: \"end\", children: (0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: \"Enter a clear, concise name for your habit\", children: (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", children: (0, jsx_runtime_1.jsx)(icons_material_1.Help, { fontSize: \"small\" }) }) }) })),\n                                } }), (0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Description\", value: description, onChange: (e) => setDescription(e.target.value), multiline: true, rows: 2, fullWidth: true, error: !!validationError && validationError.includes('Description'), helperText: `${description.length}/200 characters` }), (0, jsx_runtime_1.jsxs)(material_1.FormControl, { fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.InputLabel, { shrink: true, htmlFor: \"color-input\", children: \"Color\" }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center', gap: 2, mt: 2 }, children: [(0, jsx_runtime_1.jsx)(material_1.TextField, { id: \"color-input\", type: \"color\", value: color, onChange: (e) => setColor(e.target.value), sx: { width: 100 } }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                                    width: 40,\n                                                    height: 40,\n                                                    borderRadius: 1,\n                                                    bgcolor: color,\n                                                    border: '1px solid',\n                                                    borderColor: 'divider',\n                                                } })] })] }), (0, jsx_runtime_1.jsx)(material_1.FormControlLabel, { control: (0, jsx_runtime_1.jsx)(material_1.Switch, { checked: trackQuantity, onChange: (e) => {\n                                        setTrackQuantity(e.target.checked);\n                                        if (!e.target.checked) {\n                                            setUnit('');\n                                        }\n                                    } }), label: (0, jsx_runtime_1.jsxs)(material_1.Box, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { color: \"text.primary\", children: \"Track Quantity\" }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: { display: 'block', color: 'text.secondary' }, children: \"Enable to track numeric values for this habit\" })] }) }), trackQuantity && ((0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Unit (e.g., pages, minutes, km)\", value: unit, onChange: (e) => setUnit(e.target.value), fullWidth: true, placeholder: \"e.g., pages, minutes, km\", error: !!validationError && validationError.includes('Unit'), helperText: `${unit.length}/20 characters` }))] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { sx: { px: 3, py: 2, borderTop: '1px solid', borderColor: 'divider', bgcolor: 'background.paper' }, children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: handleClose, sx: { borderRadius: '20px', px: 2 }, children: \"Cancel\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { type: \"submit\", variant: \"contained\", color: \"primary\", disabled: !name.trim() || (trackQuantity && !unit.trim()), sx: {\n                                borderRadius: '20px',\n                                px: 2,\n                                background: mode === 'light'\n                                    ? 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n                                    : 'linear-gradient(45deg, #90caf9 30%, #81deea 90%)',\n                                boxShadow: mode === 'light'\n                                    ? '0 3px 5px 2px rgba(33, 203, 243, .3)'\n                                    : '0 3px 5px 2px rgba(144, 202, 249, .3)',\n                            }, children: \"Add Habit\" })] })] }) }));\n};\nexports[\"default\"] = react_1.default.memo(AddHabitDialog);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///675621\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["defaultVendors-node_modules_mui_icons-material_esm_index_js-node_modules_mui_material_CssBase-93f6d1"], () => (__webpack_exec__(455430), __webpack_exec__(563943), __webpack_exec__(1335)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);