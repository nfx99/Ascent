"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateascent"]("main",{

/***/ 587222:
/*!***********************************************!*\
  !*** ./src/renderer/components/HabitCard.tsx ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst date_fns_1 = __webpack_require__(/*! date-fns */ 917705);\nconst HabitCard = ({ habit, onToggleCompletion, onDelete }) => {\n    const [currentDate, setCurrentDate] = (0, react_1.useState)(new Date());\n    const [isLogDialogOpen, setIsLogDialogOpen] = (0, react_1.useState)(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = (0, react_1.useState)(false);\n    const [selectedDate, setSelectedDate] = (0, react_1.useState)(new Date());\n    const [quantity, setQuantity] = (0, react_1.useState)('');\n    const [useCheckbox, setUseCheckbox] = (0, react_1.useState)(true);\n    const monthStart = (0, react_1.useMemo)(() => (0, date_fns_1.startOfMonth)(currentDate), [currentDate]);\n    const monthEnd = (0, react_1.useMemo)(() => (0, date_fns_1.endOfMonth)(currentDate), [currentDate]);\n    const days = (0, react_1.useMemo)(() => (0, date_fns_1.eachDayOfInterval)({ start: monthStart, end: monthEnd }), [monthStart, monthEnd]);\n    // Full year days\n    const yearStart = (0, react_1.useMemo)(() => (0, date_fns_1.startOfYear)(new Date()), []);\n    const yearEnd = (0, react_1.useMemo)(() => (0, date_fns_1.endOfYear)(new Date()), []);\n    const yearDays = (0, react_1.useMemo)(() => (0, date_fns_1.eachDayOfInterval)({ start: yearStart, end: yearEnd }), [yearStart, yearEnd]);\n    // Group days by week (columns) and weekday (rows)\n    const weeks = (0, react_1.useMemo)(() => {\n        const weekMap = {};\n        yearDays.forEach(day => {\n            const week = (0, date_fns_1.getISOWeek)(day);\n            const weekday = (0, date_fns_1.getDay)(day);\n            if (!weekMap[week])\n                weekMap[week] = {};\n            weekMap[week][weekday] = day;\n        });\n        return weekMap;\n    }, [yearDays]);\n    const handlePrevMonth = (0, react_1.useCallback)(() => {\n        setCurrentDate(prev => (0, date_fns_1.subMonths)(prev, 1));\n    }, []);\n    const handleNextMonth = (0, react_1.useCallback)(() => {\n        setCurrentDate(prev => (0, date_fns_1.addMonths)(prev, 1));\n    }, []);\n    const isHabitCompleted = (0, react_1.useCallback)((date) => {\n        return habit.completions.some(completion => completion.date === (0, date_fns_1.format)(date, 'yyyy-MM-dd'));\n    }, [habit.completions]);\n    const calculateStreak = (0, react_1.useCallback)(() => {\n        let streak = 0;\n        const today = new Date();\n        let currentDate = new Date();\n        while (isHabitCompleted(currentDate) && !(0, date_fns_1.isAfter)(currentDate, today)) {\n            streak++;\n            currentDate.setDate(currentDate.getDate() - 1);\n        }\n        return streak;\n    }, [isHabitCompleted]);\n    const handleLogSubmit = (0, react_1.useCallback)(() => {\n        if (useCheckbox) {\n            onToggleCompletion((0, date_fns_1.format)(selectedDate, 'yyyy-MM-dd'));\n        }\n        else if (quantity !== '') {\n            onToggleCompletion((0, date_fns_1.format)(selectedDate, 'yyyy-MM-dd'), Number(quantity));\n        }\n        setIsLogDialogOpen(false);\n        setQuantity('');\n        setUseCheckbox(true);\n    }, [useCheckbox, selectedDate, quantity, onToggleCompletion]);\n    const handleDayClick = (0, react_1.useCallback)((day) => {\n        if ((0, date_fns_1.isAfter)(day, new Date())) {\n            return; // Don't allow logging future dates\n        }\n        setSelectedDate(day);\n        setIsLogDialogOpen(true);\n    }, []);\n    const streak = (0, react_1.useMemo)(() => calculateStreak(), [calculateStreak]);\n    return ((0, jsx_runtime_1.jsxs)(material_1.Paper, { elevation: 0, sx: {\n            p: 2,\n            mb: 2,\n            bgcolor: 'background.paper',\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            border: '1px solid',\n            borderColor: 'divider',\n        }, children: [(0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }, children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"h6\", noWrap: true, title: habit.name, children: habit.name }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center', gap: 1 }, children: [(0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: `Current streak: ${streak} days`, children: (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: \"body2\", color: \"text.secondary\", children: [\"\\uD83D\\uDD25 \", streak] }) }), (0, jsx_runtime_1.jsx)(material_1.Button, { variant: \"outlined\", size: \"small\", startIcon: (0, jsx_runtime_1.jsx)(icons_material_1.Add, {}), onClick: () => {\n                                    setSelectedDate(new Date());\n                                    setIsLogDialogOpen(true);\n                                }, children: \"Log today\" }), (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", color: \"error\", onClick: () => setIsDeleteDialogOpen(true), children: (0, jsx_runtime_1.jsx)(icons_material_1.Delete, {}) })] })] }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: { overflowX: 'auto', pb: 1 }, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'grid', gridTemplateColumns: `repeat(${Object.keys(weeks).length}, 1fr)`, gap: 0.3 }, children: [[0, 1, 2, 3, 4, 5, 6].map((weekday) => ((0, jsx_runtime_1.jsx)(material_1.Box, { sx: { gridColumn: 1, gridRow: weekday + 2, justifySelf: 'end', pr: 0.5 }, children: (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: { fontSize: '0.65rem', color: 'text.secondary' }, children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][weekday] }) }, weekday))), Object.entries(weeks).map(([week, daysObj], weekIdx) => ([0, 1, 2, 3, 4, 5, 6].map((weekday) => {\n                            const day = daysObj[weekday];\n                            if (!day)\n                                return (0, jsx_runtime_1.jsx)(material_1.Box, { sx: { width: 16, height: 16 } }, `empty-${weekIdx}-${weekday}`);\n                            const isCompleted = isHabitCompleted(day);\n                            const isFuture = (0, date_fns_1.isAfter)(day, new Date());\n                            const isCurrentDay = (0, date_fns_1.isToday)(day);\n                            return ((0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                    width: 16,\n                                    height: 16,\n                                    m: 0.2,\n                                    bgcolor: isCompleted ? habit.color + '99' : 'transparent',\n                                    border: isCurrentDay ? `1px solid ${habit.color}` : '1px solid #e0e0e0',\n                                    borderRadius: '3px',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    position: 'relative',\n                                    cursor: isFuture ? 'not-allowed' : 'pointer',\n                                    opacity: isFuture ? 0.3 : 1,\n                                }, children: isCurrentDay ? null : ((0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', gap: 0.2 }, children: [!isCompleted && !isFuture && ((0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: \"Log\", children: (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", sx: { p: 0, width: 14, height: 14 }, onClick: e => {\n                                                    e.stopPropagation();\n                                                    setSelectedDate(day);\n                                                    setIsLogDialogOpen(true);\n                                                }, children: (0, jsx_runtime_1.jsx)(icons_material_1.Add, { sx: { fontSize: 12 } }) }) })), isCompleted && !isFuture && ((0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: \"Unlog\", children: (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", sx: { p: 0, width: 14, height: 14 }, onClick: e => {\n                                                    e.stopPropagation();\n                                                    onToggleCompletion((0, date_fns_1.format)(day, 'yyyy-MM-dd'));\n                                                }, children: (0, jsx_runtime_1.jsx)(icons_material_1.Undo, { sx: { fontSize: 12 } }) }) }))] })) }, day.toString()));\n                        })))] }) }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', justifyContent: 'space-between', mt: 1 }, children: [(0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", onClick: handlePrevMonth, children: (0, jsx_runtime_1.jsx)(icons_material_1.ChevronLeft, { fontSize: \"small\" }) }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", color: \"text.secondary\", children: (0, date_fns_1.format)(currentDate, 'MMM yyyy') }), (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", onClick: handleNextMonth, children: (0, jsx_runtime_1.jsx)(icons_material_1.ChevronRight, { fontSize: \"small\" }) })] }), (0, jsx_runtime_1.jsxs)(material_1.Dialog, { open: isLogDialogOpen, onClose: () => setIsLogDialogOpen(false), maxWidth: \"xs\", fullWidth: true, children: [(0, jsx_runtime_1.jsxs)(material_1.DialogTitle, { children: [\"Log \", habit.name] }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { mt: 2 }, children: [(0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: \"subtitle2\", gutterBottom: true, children: [\"Date: \", (0, date_fns_1.format)(selectedDate, 'MMMM d, yyyy')] }), (0, jsx_runtime_1.jsx)(material_1.FormControlLabel, { control: (0, jsx_runtime_1.jsx)(material_1.Checkbox, { checked: useCheckbox, onChange: (e) => setUseCheckbox(e.target.checked) }), label: \"Mark as completed\" }), !useCheckbox && ((0, jsx_runtime_1.jsx)(material_1.TextField, { fullWidth: true, type: \"number\", label: `Quantity${habit.unit ? ` (${habit.unit})` : ''}`, value: quantity, onChange: (e) => {\n                                        const val = e.target.value;\n                                        if (val === '' || (Number(val) >= 0 && Number(val) <= 1000000)) {\n                                            setQuantity(val === '' ? '' : Number(val));\n                                        }\n                                    }, sx: { mt: 2 }, inputProps: {\n                                        min: 0,\n                                        max: 1000000,\n                                    } }))] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => setIsLogDialogOpen(false), children: \"Cancel\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { onClick: handleLogSubmit, variant: \"contained\", disabled: !useCheckbox && quantity === '', children: \"Save\" })] })] }), (0, jsx_runtime_1.jsxs)(material_1.Dialog, { open: isDeleteDialogOpen, onClose: () => setIsDeleteDialogOpen(false), maxWidth: \"xs\", fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.DialogTitle, { children: \"Delete Habit\" }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { children: (0, jsx_runtime_1.jsxs)(material_1.Typography, { children: [\"Are you sure you want to delete \\\"\", habit.name, \"\\\"? This action cannot be undone.\"] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => setIsDeleteDialogOpen(false), children: \"Cancel\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => {\n                                    onDelete();\n                                    setIsDeleteDialogOpen(false);\n                                }, color: \"error\", variant: \"contained\", children: \"Delete\" })] })] })] }));\n};\nexports[\"default\"] = HabitCard;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///587222\n");

/***/ })

});