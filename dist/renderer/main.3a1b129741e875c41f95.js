"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkascent"] = self["webpackChunkascent"] || []).push([["main"],{

/***/ 1335:
/*!********************************!*\
  !*** ./src/renderer/index.tsx ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importDefault(__webpack_require__(/*! react */ 296540));\nconst client_1 = __webpack_require__(/*! react-dom/client */ 205338);\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst App_1 = __importDefault(__webpack_require__(/*! ./App */ 207526));\nconst theme = (0, material_1.createTheme)({\n    palette: {\n        mode: 'light',\n    },\n});\nconst container = document.getElementById('root');\nif (!container)\n    throw new Error('Failed to find the root element');\nconst root = (0, client_1.createRoot)(container);\nconst ErrorBoundary = ({ children }) => {\n    const [hasError, setHasError] = react_1.default.useState(false);\n    const [error, setError] = react_1.default.useState(null);\n    react_1.default.useEffect(() => {\n        const handleError = (error) => {\n            console.error('Uncaught error:', error);\n            setHasError(true);\n            setError(error.error);\n        };\n        window.addEventListener('error', handleError);\n        return () => window.removeEventListener('error', handleError);\n    }, []);\n    if (hasError) {\n        return ((0, jsx_runtime_1.jsxs)(\"div\", { style: { padding: 20, color: 'red' }, children: [(0, jsx_runtime_1.jsx)(\"h1\", { children: \"Something went wrong\" }), (0, jsx_runtime_1.jsx)(\"pre\", { children: error?.message }), (0, jsx_runtime_1.jsx)(\"button\", { onClick: () => window.location.reload(), children: \"Reload App\" })] }));\n    }\n    return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: children });\n};\nroot.render((0, jsx_runtime_1.jsx)(react_1.default.StrictMode, { children: (0, jsx_runtime_1.jsx)(ErrorBoundary, { children: (0, jsx_runtime_1.jsxs)(material_1.ThemeProvider, { theme: theme, children: [(0, jsx_runtime_1.jsx)(material_1.CssBaseline, {}), (0, jsx_runtime_1.jsx)(App_1.default, {})] }) }) }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMzNS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixtQkFBTyxDQUFDLCtCQUFtQjtBQUNqRCxnQ0FBZ0MsbUJBQU8sQ0FBQyxtQkFBTztBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyw4QkFBa0I7QUFDM0MsbUJBQW1CLG1CQUFPLENBQUMsMkJBQWU7QUFDMUMsOEJBQThCLG1CQUFPLENBQUMsbUJBQU87QUFDN0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsaURBQWlELFNBQVMsMkJBQTJCLDRDQUE0QyxrQ0FBa0MsbUNBQW1DLDBCQUEwQixzQ0FBc0MsaUVBQWlFLElBQUk7QUFDM1U7QUFDQSw0REFBNEQsb0JBQW9CO0FBQ2hGO0FBQ0EsaUVBQWlFLGtEQUFrRCw4REFBOEQsMEVBQTBFLDJDQUEyQyxJQUFJLEdBQUcsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL2FzY2VudC8uL3NyYy9yZW5kZXJlci9pbmRleC50c3g/ZGQyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGpzeF9ydW50aW1lXzEgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCByZWFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBjbGllbnRfMSA9IHJlcXVpcmUoXCJyZWFjdC1kb20vY2xpZW50XCIpO1xuY29uc3QgbWF0ZXJpYWxfMSA9IHJlcXVpcmUoXCJAbXVpL21hdGVyaWFsXCIpO1xuY29uc3QgQXBwXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vQXBwXCIpKTtcbmNvbnN0IHRoZW1lID0gKDAsIG1hdGVyaWFsXzEuY3JlYXRlVGhlbWUpKHtcbiAgICBwYWxldHRlOiB7XG4gICAgICAgIG1vZGU6ICdsaWdodCcsXG4gICAgfSxcbn0pO1xuY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKTtcbmlmICghY29udGFpbmVyKVxuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZpbmQgdGhlIHJvb3QgZWxlbWVudCcpO1xuY29uc3Qgcm9vdCA9ICgwLCBjbGllbnRfMS5jcmVhdGVSb290KShjb250YWluZXIpO1xuY29uc3QgRXJyb3JCb3VuZGFyeSA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgICBjb25zdCBbaGFzRXJyb3IsIHNldEhhc0Vycm9yXSA9IHJlYWN0XzEuZGVmYXVsdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSByZWFjdF8xLmRlZmF1bHQudXNlU3RhdGUobnVsbCk7XG4gICAgcmVhY3RfMS5kZWZhdWx0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGhhbmRsZUVycm9yID0gKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdVbmNhdWdodCBlcnJvcjonLCBlcnJvcik7XG4gICAgICAgICAgICBzZXRIYXNFcnJvcih0cnVlKTtcbiAgICAgICAgICAgIHNldEVycm9yKGVycm9yLmVycm9yKTtcbiAgICAgICAgfTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgaGFuZGxlRXJyb3IpO1xuICAgICAgICByZXR1cm4gKCkgPT4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgaGFuZGxlRXJyb3IpO1xuICAgIH0sIFtdKTtcbiAgICBpZiAoaGFzRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3hzKShcImRpdlwiLCB7IHN0eWxlOiB7IHBhZGRpbmc6IDIwLCBjb2xvcjogJ3JlZCcgfSwgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiaDFcIiwgeyBjaGlsZHJlbjogXCJTb21ldGhpbmcgd2VudCB3cm9uZ1wiIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwicHJlXCIsIHsgY2hpbGRyZW46IGVycm9yPy5tZXNzYWdlIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiYnV0dG9uXCIsIHsgb25DbGljazogKCkgPT4gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpLCBjaGlsZHJlbjogXCJSZWxvYWQgQXBwXCIgfSldIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBqc3hfcnVudGltZV8xLmpzeCkoanN4X3J1bnRpbWVfMS5GcmFnbWVudCwgeyBjaGlsZHJlbjogY2hpbGRyZW4gfSk7XG59O1xucm9vdC5yZW5kZXIoKDAsIGpzeF9ydW50aW1lXzEuanN4KShyZWFjdF8xLmRlZmF1bHQuU3RyaWN0TW9kZSwgeyBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShFcnJvckJvdW5kYXJ5LCB7IGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLlRoZW1lUHJvdmlkZXIsIHsgdGhlbWU6IHRoZW1lLCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5Dc3NCYXNlbGluZSwge30pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKEFwcF8xLmRlZmF1bHQsIHt9KV0gfSkgfSkgfSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1335\n");

/***/ }),

/***/ 199684:
/*!***********************************************!*\
  !*** ./src/renderer/context/HabitContext.tsx ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useHabits = exports.HabitProvider = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst habit_1 = __webpack_require__(/*! ../types/habit */ 414105);\nconst HabitContext = (0, react_1.createContext)(undefined);\nconst STORAGE_KEY = 'habits';\nconst HabitProvider = ({ children }) => {\n    const [habits, setHabits] = (0, react_1.useState)(() => {\n        try {\n            const savedHabits = localStorage.getItem(STORAGE_KEY);\n            if (!savedHabits)\n                return [];\n            const parsedHabits = JSON.parse(savedHabits);\n            if (!Array.isArray(parsedHabits)) {\n                console.error('Invalid habits data in localStorage');\n                return [];\n            }\n            // Migrate old data if needed\n            return parsedHabits.map((habit) => ({\n                ...habit,\n                updatedAt: habit.updatedAt || habit.createdAt,\n                archived: habit.archived || false,\n                completions: habit.completions.map(completion => ({\n                    ...completion,\n                    completedAt: completion.completedAt || new Date(completion.date).toISOString(),\n                })),\n            }));\n        }\n        catch (error) {\n            console.error('Error loading habits from localStorage:', error);\n            return [];\n        }\n    });\n    const [error, setError] = (0, react_1.useState)(null);\n    (0, react_1.useEffect)(() => {\n        try {\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(habits));\n        }\n        catch (error) {\n            console.error('Error saving habits to localStorage:', error);\n            setError('Failed to save habits. Please try again.');\n        }\n    }, [habits]);\n    const addHabit = (0, react_1.useCallback)((habit) => {\n        setError(null);\n        try {\n            if (habits.length >= habit_1.MAX_HABITS) {\n                setError(`You can't create more than ${habit_1.MAX_HABITS} habits.`);\n                return;\n            }\n            if (habits.some(h => h.name.toLowerCase() === habit.name.toLowerCase())) {\n                setError('A habit with this name already exists.');\n                return;\n            }\n            const validationErrors = (0, habit_1.validateHabit)(habit);\n            if (validationErrors.length > 0) {\n                setError(validationErrors[0].message);\n                return;\n            }\n            const now = new Date().toISOString();\n            const newHabit = {\n                ...habit,\n                id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                createdAt: now,\n                updatedAt: now,\n                completions: [],\n                archived: false,\n            };\n            // Use a timeout to allow any UI animations to complete before updating state\n            setTimeout(() => {\n                setHabits(prev => [...prev, newHabit]);\n            }, 0);\n        }\n        catch (error) {\n            console.error('Error adding habit:', error);\n            setError('Failed to add habit. Please try again.');\n        }\n    }, [habits]);\n    const toggleHabitCompletion = (0, react_1.useCallback)((habitId, date, quantity, notes) => {\n        setError(null);\n        if (!habitId || !date) {\n            setError('Invalid habit or date.');\n            return;\n        }\n        setHabits(prev => prev.map(habit => {\n            if (habit.id === habitId) {\n                const existingCompletion = habit.completions.find(c => c.date === date);\n                let newCompletions;\n                if (existingCompletion) {\n                    // Remove completion if it exists\n                    newCompletions = habit.completions.filter(c => c.date !== date);\n                }\n                else {\n                    // Add new completion\n                    if (habit.completions.length >= habit_1.MAX_COMPLETIONS_PER_HABIT) {\n                        setError('Maximum number of completions reached for this habit.');\n                        return habit;\n                    }\n                    const completion = {\n                        date,\n                        completedAt: new Date().toISOString(),\n                    };\n                    if (habit.trackQuantity && typeof quantity === 'number') {\n                        completion.quantity = quantity;\n                    }\n                    if (notes?.trim()) {\n                        completion.notes = notes.trim();\n                    }\n                    newCompletions = [...habit.completions, completion];\n                }\n                return {\n                    ...habit,\n                    completions: newCompletions,\n                    updatedAt: new Date().toISOString(),\n                };\n            }\n            return habit;\n        }));\n    }, []);\n    const deleteHabit = (0, react_1.useCallback)((habitId) => {\n        setError(null);\n        if (!habitId) {\n            setError('Invalid habit ID.');\n            return;\n        }\n        setHabits(prev => {\n            const habitExists = prev.some(h => h.id === habitId);\n            if (!habitExists) {\n                setError('Habit not found.');\n                return prev;\n            }\n            return prev.filter(habit => habit.id !== habitId);\n        });\n    }, []);\n    const archiveHabit = (0, react_1.useCallback)((habitId) => {\n        setError(null);\n        if (!habitId) {\n            setError('Invalid habit ID.');\n            return;\n        }\n        setHabits(prev => prev.map(habit => {\n            if (habit.id === habitId) {\n                return {\n                    ...habit,\n                    archived: true,\n                    updatedAt: new Date().toISOString(),\n                };\n            }\n            return habit;\n        }));\n    }, []);\n    const getHabitStats = (0, react_1.useCallback)((habitId) => {\n        const habit = habits.find(h => h.id === habitId);\n        if (!habit)\n            return null;\n        const completions = habit.completions;\n        const totalCompletions = completions.length;\n        // Calculate streaks\n        let currentStreak = 0;\n        let longestStreak = 0;\n        let currentCount = 0;\n        // Sort completions by date\n        const sortedDates = completions\n            .map(c => new Date(c.date))\n            .sort((a, b) => b.getTime() - a.getTime());\n        if (sortedDates.length > 0) {\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            let currentDate = new Date(sortedDates[0]);\n            currentDate.setHours(0, 0, 0, 0);\n            // Calculate current streak\n            while (currentDate <= today) {\n                const hasCompletion = sortedDates.some(date => date.getFullYear() === currentDate.getFullYear() &&\n                    date.getMonth() === currentDate.getMonth() &&\n                    date.getDate() === currentDate.getDate());\n                if (hasCompletion) {\n                    currentCount++;\n                }\n                else {\n                    break;\n                }\n                currentDate.setDate(currentDate.getDate() - 1);\n            }\n            currentStreak = currentCount;\n            longestStreak = currentCount;\n            // Calculate longest streak\n            currentCount = 0;\n            for (let i = 0; i < sortedDates.length - 1; i++) {\n                const date1 = sortedDates[i];\n                const date2 = sortedDates[i + 1];\n                const diffDays = Math.round((date1.getTime() - date2.getTime()) / (1000 * 60 * 60 * 24));\n                if (diffDays === 1) {\n                    currentCount++;\n                    longestStreak = Math.max(longestStreak, currentCount);\n                }\n                else {\n                    currentCount = 0;\n                }\n            }\n        }\n        // Calculate completion rate\n        const daysSinceCreation = Math.ceil((new Date().getTime() - new Date(habit.createdAt).getTime()) / (1000 * 60 * 60 * 24));\n        const completionRate = (totalCompletions / daysSinceCreation) * 100;\n        // Calculate quantity stats if applicable\n        let averageQuantity;\n        let totalQuantity;\n        if (habit.trackQuantity) {\n            const quantities = completions\n                .map(c => c.quantity)\n                .filter((q) => typeof q === 'number');\n            if (quantities.length > 0) {\n                totalQuantity = quantities.reduce((sum, q) => sum + q, 0);\n                averageQuantity = totalQuantity / quantities.length;\n            }\n        }\n        return {\n            totalCompletions,\n            currentStreak,\n            longestStreak,\n            completionRate,\n            averageQuantity,\n            totalQuantity,\n            lastCompletionDate: completions.length > 0 ? completions[completions.length - 1].date : undefined,\n        };\n    }, [habits]);\n    const value = react_1.default.useMemo(() => ({\n        habits,\n        addHabit,\n        toggleHabitCompletion,\n        deleteHabit,\n        archiveHabit,\n        getHabitStats,\n        error,\n    }), [habits, addHabit, toggleHabitCompletion, deleteHabit, archiveHabit, getHabitStats, error]);\n    return ((0, jsx_runtime_1.jsx)(HabitContext.Provider, { value: value, children: children }));\n};\nexports.HabitProvider = HabitProvider;\nconst useHabits = () => {\n    const context = (0, react_1.useContext)(HabitContext);\n    if (context === undefined) {\n        throw new Error('useHabits must be used within a HabitProvider');\n    }\n    return context;\n};\nexports.useHabits = useHabits;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///199684\n");

/***/ }),

/***/ 207526:
/*!******************************!*\
  !*** ./src/renderer/App.tsx ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst HabitContext_1 = __webpack_require__(/*! ./context/HabitContext */ 199684);\nconst AddHabitDialog_1 = __importDefault(__webpack_require__(/*! ./components/AddHabitDialog */ 675621));\nconst HabitCard_1 = __importDefault(__webpack_require__(/*! ./components/HabitCard */ 587222));\nconst HabitList = () => {\n    const { habits, toggleHabitCompletion, deleteHabit } = (0, HabitContext_1.useHabits)();\n    const [isAddDialogOpen, setIsAddDialogOpen] = (0, react_1.useState)(false);\n    const [isTransitioning, setIsTransitioning] = (0, react_1.useState)(false);\n    const handleOpenDialog = (0, react_1.useCallback)(() => {\n        if (isTransitioning)\n            return;\n        setIsTransitioning(true);\n        setIsAddDialogOpen(true);\n        // Allow transition state to reset after dialog is fully open\n        setTimeout(() => setIsTransitioning(false), 300);\n    }, [isTransitioning]);\n    const handleCloseDialog = (0, react_1.useCallback)(() => {\n        if (isTransitioning)\n            return;\n        setIsTransitioning(true);\n        setIsAddDialogOpen(false);\n        // Allow transition state to reset after dialog is fully closed\n        setTimeout(() => setIsTransitioning(false), 300);\n    }, [isTransitioning]);\n    return ((0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', flexDirection: 'column', minHeight: '100vh' }, children: [(0, jsx_runtime_1.jsx)(material_1.AppBar, { position: \"static\", children: (0, jsx_runtime_1.jsxs)(material_1.Toolbar, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"h6\", component: \"div\", sx: { flexGrow: 1 }, children: \"Habit Tracker\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { color: \"inherit\", startIcon: (0, jsx_runtime_1.jsx)(icons_material_1.Add, {}), onClick: handleOpenDialog, disabled: isTransitioning, children: \"Add Habit\" })] }) }), (0, jsx_runtime_1.jsx)(material_1.Container, { maxWidth: \"lg\", sx: {\n                    mt: 4,\n                    mb: 4,\n                    flexGrow: 1,\n                    display: 'flex',\n                    flexDirection: 'column'\n                }, children: (0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: 0,\n                        flexGrow: 1,\n                    }, children: habits.map((habit) => ((0, jsx_runtime_1.jsx)(HabitCard_1.default, { habit: habit, onToggleCompletion: (date, quantity) => toggleHabitCompletion(habit.id, date, quantity), onDelete: () => deleteHabit(habit.id) }, habit.id))) }) }), (0, jsx_runtime_1.jsx)(AddHabitDialog_1.default, { open: isAddDialogOpen, onClose: handleCloseDialog })] }));\n};\nconst App = () => {\n    return ((0, jsx_runtime_1.jsx)(HabitContext_1.HabitProvider, { children: (0, jsx_runtime_1.jsx)(HabitList, {}) }));\n};\nexports[\"default\"] = App;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA3NTI2LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsY0FBYztBQUN6RTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLG1CQUFPLENBQUMsK0JBQW1CO0FBQ2pELDZCQUE2QixtQkFBTyxDQUFDLG1CQUFPO0FBQzVDLG1CQUFtQixtQkFBTyxDQUFDLDJCQUFlO0FBQzFDLHlCQUF5QixtQkFBTyxDQUFDLGlDQUFxQjtBQUN0RCx1QkFBdUIsbUJBQU8sQ0FBQyxvQ0FBd0I7QUFDdkQseUNBQXlDLG1CQUFPLENBQUMseUNBQTZCO0FBQzlFLG9DQUFvQyxtQkFBTyxDQUFDLG9DQUF3QjtBQUNwRTtBQUNBLFlBQVksNkNBQTZDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxzREFBc0QsTUFBTSw4REFBOEQseURBQXlELDRFQUE0RSwyREFBMkQsdUNBQXVDLGFBQWEsNkJBQTZCLCtDQUErQyw0RUFBNEUsZ0ZBQWdGLElBQUksR0FBRyxrREFBa0Q7QUFDL29CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscURBQXFEO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGlGQUFpRiw4SUFBOEksZUFBZSxHQUFHLHNEQUFzRCxtREFBbUQsSUFBSTtBQUNuWDtBQUNBO0FBQ0EsbUVBQW1FLDhDQUE4QyxHQUFHO0FBQ3BIO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc2NlbnQvLi9zcmMvcmVuZGVyZXIvQXBwLnRzeD8zMWQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBvd25LZXlzID0gZnVuY3Rpb24obykge1xuICAgICAgICBvd25LZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgIHZhciBhciA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgayBpbiBvKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sIGspKSBhclthci5sZW5ndGhdID0gaztcbiAgICAgICAgICAgIHJldHVybiBhcjtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIG93bktleXMobyk7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG1vZCkge1xuICAgICAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgICAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayA9IG93bktleXMobW9kKSwgaSA9IDA7IGkgPCBrLmxlbmd0aDsgaSsrKSBpZiAoa1tpXSAhPT0gXCJkZWZhdWx0XCIpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwga1tpXSk7XG4gICAgICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbn0pKCk7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBqc3hfcnVudGltZV8xID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3QgcmVhY3RfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xuY29uc3QgbWF0ZXJpYWxfMSA9IHJlcXVpcmUoXCJAbXVpL21hdGVyaWFsXCIpO1xuY29uc3QgaWNvbnNfbWF0ZXJpYWxfMSA9IHJlcXVpcmUoXCJAbXVpL2ljb25zLW1hdGVyaWFsXCIpO1xuY29uc3QgSGFiaXRDb250ZXh0XzEgPSByZXF1aXJlKFwiLi9jb250ZXh0L0hhYml0Q29udGV4dFwiKTtcbmNvbnN0IEFkZEhhYml0RGlhbG9nXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY29tcG9uZW50cy9BZGRIYWJpdERpYWxvZ1wiKSk7XG5jb25zdCBIYWJpdENhcmRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9jb21wb25lbnRzL0hhYml0Q2FyZFwiKSk7XG5jb25zdCBIYWJpdExpc3QgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBoYWJpdHMsIHRvZ2dsZUhhYml0Q29tcGxldGlvbiwgZGVsZXRlSGFiaXQgfSA9ICgwLCBIYWJpdENvbnRleHRfMS51c2VIYWJpdHMpKCk7XG4gICAgY29uc3QgW2lzQWRkRGlhbG9nT3Blbiwgc2V0SXNBZGREaWFsb2dPcGVuXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKShmYWxzZSk7XG4gICAgY29uc3QgW2lzVHJhbnNpdGlvbmluZywgc2V0SXNUcmFuc2l0aW9uaW5nXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKShmYWxzZSk7XG4gICAgY29uc3QgaGFuZGxlT3BlbkRpYWxvZyA9ICgwLCByZWFjdF8xLnVzZUNhbGxiYWNrKSgoKSA9PiB7XG4gICAgICAgIGlmIChpc1RyYW5zaXRpb25pbmcpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNldElzVHJhbnNpdGlvbmluZyh0cnVlKTtcbiAgICAgICAgc2V0SXNBZGREaWFsb2dPcGVuKHRydWUpO1xuICAgICAgICAvLyBBbGxvdyB0cmFuc2l0aW9uIHN0YXRlIHRvIHJlc2V0IGFmdGVyIGRpYWxvZyBpcyBmdWxseSBvcGVuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0SXNUcmFuc2l0aW9uaW5nKGZhbHNlKSwgMzAwKTtcbiAgICB9LCBbaXNUcmFuc2l0aW9uaW5nXSk7XG4gICAgY29uc3QgaGFuZGxlQ2xvc2VEaWFsb2cgPSAoMCwgcmVhY3RfMS51c2VDYWxsYmFjaykoKCkgPT4ge1xuICAgICAgICBpZiAoaXNUcmFuc2l0aW9uaW5nKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZXRJc1RyYW5zaXRpb25pbmcodHJ1ZSk7XG4gICAgICAgIHNldElzQWRkRGlhbG9nT3BlbihmYWxzZSk7XG4gICAgICAgIC8vIEFsbG93IHRyYW5zaXRpb24gc3RhdGUgdG8gcmVzZXQgYWZ0ZXIgZGlhbG9nIGlzIGZ1bGx5IGNsb3NlZFxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHNldElzVHJhbnNpdGlvbmluZyhmYWxzZSksIDMwMCk7XG4gICAgfSwgW2lzVHJhbnNpdGlvbmluZ10pO1xuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5Cb3gsIHsgc3g6IHsgZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJywgbWluSGVpZ2h0OiAnMTAwdmgnIH0sIGNoaWxkcmVuOiBbKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkFwcEJhciwgeyBwb3NpdGlvbjogXCJzdGF0aWNcIiwgY2hpbGRyZW46ICgwLCBqc3hfcnVudGltZV8xLmpzeHMpKG1hdGVyaWFsXzEuVG9vbGJhciwgeyBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5UeXBvZ3JhcGh5LCB7IHZhcmlhbnQ6IFwiaDZcIiwgY29tcG9uZW50OiBcImRpdlwiLCBzeDogeyBmbGV4R3JvdzogMSB9LCBjaGlsZHJlbjogXCJIYWJpdCBUcmFja2VyXCIgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5CdXR0b24sIHsgY29sb3I6IFwiaW5oZXJpdFwiLCBzdGFydEljb246ICgwLCBqc3hfcnVudGltZV8xLmpzeCkoaWNvbnNfbWF0ZXJpYWxfMS5BZGQsIHt9KSwgb25DbGljazogaGFuZGxlT3BlbkRpYWxvZywgZGlzYWJsZWQ6IGlzVHJhbnNpdGlvbmluZywgY2hpbGRyZW46IFwiQWRkIEhhYml0XCIgfSldIH0pIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuQ29udGFpbmVyLCB7IG1heFdpZHRoOiBcImxnXCIsIHN4OiB7XG4gICAgICAgICAgICAgICAgICAgIG10OiA0LFxuICAgICAgICAgICAgICAgICAgICBtYjogNCxcbiAgICAgICAgICAgICAgICAgICAgZmxleEdyb3c6IDEsXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbidcbiAgICAgICAgICAgICAgICB9LCBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJveCwgeyBzeDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBnYXA6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4R3JvdzogMSxcbiAgICAgICAgICAgICAgICAgICAgfSwgY2hpbGRyZW46IGhhYml0cy5tYXAoKGhhYml0KSA9PiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShIYWJpdENhcmRfMS5kZWZhdWx0LCB7IGhhYml0OiBoYWJpdCwgb25Ub2dnbGVDb21wbGV0aW9uOiAoZGF0ZSwgcXVhbnRpdHkpID0+IHRvZ2dsZUhhYml0Q29tcGxldGlvbihoYWJpdC5pZCwgZGF0ZSwgcXVhbnRpdHkpLCBvbkRlbGV0ZTogKCkgPT4gZGVsZXRlSGFiaXQoaGFiaXQuaWQpIH0sIGhhYml0LmlkKSkpIH0pIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKEFkZEhhYml0RGlhbG9nXzEuZGVmYXVsdCwgeyBvcGVuOiBpc0FkZERpYWxvZ09wZW4sIG9uQ2xvc2U6IGhhbmRsZUNsb3NlRGlhbG9nIH0pXSB9KSk7XG59O1xuY29uc3QgQXBwID0gKCkgPT4ge1xuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShIYWJpdENvbnRleHRfMS5IYWJpdFByb3ZpZGVyLCB7IGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKEhhYml0TGlzdCwge30pIH0pKTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBBcHA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///207526\n");

/***/ }),

/***/ 414105:
/*!*************************************!*\
  !*** ./src/renderer/types/habit.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MAX_COMPLETIONS_PER_HABIT = exports.MAX_UNIT_LENGTH = exports.MAX_DESCRIPTION_LENGTH = exports.MAX_NAME_LENGTH = exports.MAX_HABITS = void 0;\nexports.validateHabit = validateHabit;\nexports.MAX_HABITS = 100;\nexports.MAX_NAME_LENGTH = 50;\nexports.MAX_DESCRIPTION_LENGTH = 200;\nexports.MAX_UNIT_LENGTH = 20;\nexports.MAX_COMPLETIONS_PER_HABIT = 1000;\nfunction validateHabit(habit) {\n    const errors = [];\n    if (!habit.name?.trim()) {\n        errors.push({ field: 'name', message: 'Name is required' });\n    }\n    else if (habit.name.length > exports.MAX_NAME_LENGTH) {\n        errors.push({ field: 'name', message: `Name must be less than ${exports.MAX_NAME_LENGTH} characters` });\n    }\n    if (habit.description && habit.description.length > exports.MAX_DESCRIPTION_LENGTH) {\n        errors.push({ field: 'description', message: `Description must be less than ${exports.MAX_DESCRIPTION_LENGTH} characters` });\n    }\n    if (habit.trackQuantity && !habit.unit?.trim()) {\n        errors.push({ field: 'unit', message: 'Unit is required when tracking quantity' });\n    }\n    else if (habit.unit && habit.unit.length > exports.MAX_UNIT_LENGTH) {\n        errors.push({ field: 'unit', message: `Unit must be less than ${exports.MAX_UNIT_LENGTH} characters` });\n    }\n    if (habit.target) {\n        if (habit.target.value <= 0) {\n            errors.push({ field: 'target', message: 'Target value must be greater than 0' });\n        }\n        if (!['daily', 'weekly', 'monthly'].includes(habit.target.period)) {\n            errors.push({ field: 'target', message: 'Invalid target period' });\n        }\n    }\n    return errors;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE0MTA1LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQyxHQUFHLHVCQUF1QixHQUFHLDhCQUE4QixHQUFHLHVCQUF1QixHQUFHLGtCQUFrQjtBQUMzSSxxQkFBcUI7QUFDckIsa0JBQWtCO0FBQ2xCLHVCQUF1QjtBQUN2Qiw4QkFBOEI7QUFDOUIsdUJBQXVCO0FBQ3ZCLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNENBQTRDO0FBQ2xFO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWtELHlCQUF5QixhQUFhO0FBQzlHO0FBQ0E7QUFDQSxzQkFBc0IsZ0VBQWdFLGdDQUFnQyxhQUFhO0FBQ25JO0FBQ0E7QUFDQSxzQkFBc0IsbUVBQW1FO0FBQ3pGO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWtELHlCQUF5QixhQUFhO0FBQzlHO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpRUFBaUU7QUFDM0Y7QUFDQTtBQUNBLDBCQUEwQixtREFBbUQ7QUFDN0U7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc2NlbnQvLi9zcmMvcmVuZGVyZXIvdHlwZXMvaGFiaXQudHM/YzJlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTUFYX0NPTVBMRVRJT05TX1BFUl9IQUJJVCA9IGV4cG9ydHMuTUFYX1VOSVRfTEVOR1RIID0gZXhwb3J0cy5NQVhfREVTQ1JJUFRJT05fTEVOR1RIID0gZXhwb3J0cy5NQVhfTkFNRV9MRU5HVEggPSBleHBvcnRzLk1BWF9IQUJJVFMgPSB2b2lkIDA7XG5leHBvcnRzLnZhbGlkYXRlSGFiaXQgPSB2YWxpZGF0ZUhhYml0O1xuZXhwb3J0cy5NQVhfSEFCSVRTID0gMTAwO1xuZXhwb3J0cy5NQVhfTkFNRV9MRU5HVEggPSA1MDtcbmV4cG9ydHMuTUFYX0RFU0NSSVBUSU9OX0xFTkdUSCA9IDIwMDtcbmV4cG9ydHMuTUFYX1VOSVRfTEVOR1RIID0gMjA7XG5leHBvcnRzLk1BWF9DT01QTEVUSU9OU19QRVJfSEFCSVQgPSAxMDAwO1xuZnVuY3Rpb24gdmFsaWRhdGVIYWJpdChoYWJpdCkge1xuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgIGlmICghaGFiaXQubmFtZT8udHJpbSgpKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHsgZmllbGQ6ICduYW1lJywgbWVzc2FnZTogJ05hbWUgaXMgcmVxdWlyZWQnIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChoYWJpdC5uYW1lLmxlbmd0aCA+IGV4cG9ydHMuTUFYX05BTUVfTEVOR1RIKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHsgZmllbGQ6ICduYW1lJywgbWVzc2FnZTogYE5hbWUgbXVzdCBiZSBsZXNzIHRoYW4gJHtleHBvcnRzLk1BWF9OQU1FX0xFTkdUSH0gY2hhcmFjdGVyc2AgfSk7XG4gICAgfVxuICAgIGlmIChoYWJpdC5kZXNjcmlwdGlvbiAmJiBoYWJpdC5kZXNjcmlwdGlvbi5sZW5ndGggPiBleHBvcnRzLk1BWF9ERVNDUklQVElPTl9MRU5HVEgpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goeyBmaWVsZDogJ2Rlc2NyaXB0aW9uJywgbWVzc2FnZTogYERlc2NyaXB0aW9uIG11c3QgYmUgbGVzcyB0aGFuICR7ZXhwb3J0cy5NQVhfREVTQ1JJUFRJT05fTEVOR1RIfSBjaGFyYWN0ZXJzYCB9KTtcbiAgICB9XG4gICAgaWYgKGhhYml0LnRyYWNrUXVhbnRpdHkgJiYgIWhhYml0LnVuaXQ/LnRyaW0oKSkge1xuICAgICAgICBlcnJvcnMucHVzaCh7IGZpZWxkOiAndW5pdCcsIG1lc3NhZ2U6ICdVbml0IGlzIHJlcXVpcmVkIHdoZW4gdHJhY2tpbmcgcXVhbnRpdHknIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChoYWJpdC51bml0ICYmIGhhYml0LnVuaXQubGVuZ3RoID4gZXhwb3J0cy5NQVhfVU5JVF9MRU5HVEgpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goeyBmaWVsZDogJ3VuaXQnLCBtZXNzYWdlOiBgVW5pdCBtdXN0IGJlIGxlc3MgdGhhbiAke2V4cG9ydHMuTUFYX1VOSVRfTEVOR1RIfSBjaGFyYWN0ZXJzYCB9KTtcbiAgICB9XG4gICAgaWYgKGhhYml0LnRhcmdldCkge1xuICAgICAgICBpZiAoaGFiaXQudGFyZ2V0LnZhbHVlIDw9IDApIHtcbiAgICAgICAgICAgIGVycm9ycy5wdXNoKHsgZmllbGQ6ICd0YXJnZXQnLCBtZXNzYWdlOiAnVGFyZ2V0IHZhbHVlIG11c3QgYmUgZ3JlYXRlciB0aGFuIDAnIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICghWydkYWlseScsICd3ZWVrbHknLCAnbW9udGhseSddLmluY2x1ZGVzKGhhYml0LnRhcmdldC5wZXJpb2QpKSB7XG4gICAgICAgICAgICBlcnJvcnMucHVzaCh7IGZpZWxkOiAndGFyZ2V0JywgbWVzc2FnZTogJ0ludmFsaWQgdGFyZ2V0IHBlcmlvZCcgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGVycm9ycztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///414105\n");

/***/ }),

/***/ 587222:
/*!***********************************************!*\
  !*** ./src/renderer/components/HabitCard.tsx ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst date_fns_1 = __webpack_require__(/*! date-fns */ 917705);\nconst HabitCard = ({ habit, onToggleCompletion, onDelete }) => {\n    const [isLogDialogOpen, setIsLogDialogOpen] = (0, react_1.useState)(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = (0, react_1.useState)(false);\n    const [selectedDate, setSelectedDate] = (0, react_1.useState)(new Date());\n    const [quantity, setQuantity] = (0, react_1.useState)('');\n    const [useCheckbox, setUseCheckbox] = (0, react_1.useState)(true);\n    const [selectedYear, setSelectedYear] = (0, react_1.useState)(new Date().getFullYear());\n    // Build a GitHub-style heatmap grid for the selected year\n    const daysOfYear = (0, react_1.useMemo)(() => {\n        const yearStart = (0, date_fns_1.startOfYear)(new Date(selectedYear, 0, 1));\n        const yearEnd = (0, date_fns_1.endOfYear)(new Date(selectedYear, 11, 31));\n        return (0, date_fns_1.eachDayOfInterval)({ start: yearStart, end: yearEnd });\n    }, [selectedYear]);\n    const firstDayOfYear = (0, react_1.useMemo)(() => (0, date_fns_1.startOfYear)(new Date(selectedYear, 0, 1)), [selectedYear]);\n    const numWeeks = (0, react_1.useMemo)(() => (0, date_fns_1.differenceInCalendarWeeks)((0, date_fns_1.endOfYear)(new Date(selectedYear, 11, 31)), firstDayOfYear, { weekStartsOn: 0 }) + 1, [selectedYear, firstDayOfYear]);\n    const numRows = 7; // Sun-Sat\n    // Build grid: grid[col][row] = date or null\n    // Col = week, Row = weekday\n    const grid = (0, react_1.useMemo)(() => {\n        const newGrid = Array.from({ length: numWeeks }, () => Array(numRows).fill(null));\n        daysOfYear.forEach(day => {\n            const week = (0, date_fns_1.differenceInCalendarWeeks)(day, firstDayOfYear, { weekStartsOn: 0 });\n            const weekday = (0, date_fns_1.getDay)(day); // 0=Sun, 6=Sat\n            if (week >= 0 && week < numWeeks) { // Only include days in this year\n                newGrid[week][weekday] = day;\n            }\n        });\n        return newGrid;\n    }, [daysOfYear, firstDayOfYear, numWeeks, numRows]);\n    // For month labels: map colIdx to month if the first day in the column is in a new month\n    const monthLabels = (0, react_1.useMemo)(() => {\n        const labels = [];\n        let lastMonth = -1;\n        grid.forEach((col, colIdx) => {\n            // Find first day in the column\n            const firstDayInCol = col.find(day => day !== null);\n            if (firstDayInCol) {\n                const m = (0, date_fns_1.getMonth)(firstDayInCol);\n                if (m !== lastMonth) {\n                    labels.push({ col: colIdx, month: (0, date_fns_1.format)(firstDayInCol, 'MMM') });\n                    lastMonth = m;\n                }\n            }\n        });\n        return labels;\n    }, [grid]);\n    const isHabitCompleted = (0, react_1.useCallback)((date) => {\n        return habit.completions.some(completion => completion.date === (0, date_fns_1.format)(date, 'yyyy-MM-dd'));\n    }, [habit.completions]);\n    const calculateStreak = (0, react_1.useCallback)(() => {\n        let streak = 0;\n        const today = new Date();\n        let currentDate = new Date();\n        while (isHabitCompleted(currentDate) && !(0, date_fns_1.isAfter)(currentDate, today)) {\n            streak++;\n            currentDate.setDate(currentDate.getDate() - 1);\n        }\n        return streak;\n    }, [isHabitCompleted]);\n    const handleLogSubmit = (0, react_1.useCallback)(() => {\n        if (useCheckbox) {\n            onToggleCompletion((0, date_fns_1.format)(selectedDate, 'yyyy-MM-dd'));\n        }\n        else if (quantity !== '') {\n            onToggleCompletion((0, date_fns_1.format)(selectedDate, 'yyyy-MM-dd'), Number(quantity));\n        }\n        setIsLogDialogOpen(false);\n        setQuantity('');\n        setUseCheckbox(true);\n    }, [useCheckbox, selectedDate, quantity, onToggleCompletion]);\n    const handleDayClick = (0, react_1.useCallback)((day) => {\n        if ((0, date_fns_1.isAfter)(day, new Date())) {\n            return; // Don't allow logging future dates\n        }\n        setSelectedDate(day);\n        setIsLogDialogOpen(true);\n    }, []);\n    const streak = (0, react_1.useMemo)(() => calculateStreak(), [calculateStreak]);\n    const isDayCompleted = (0, react_1.useCallback)((date) => {\n        return habit.completions.some(completion => completion.date === (0, date_fns_1.format)(date, 'yyyy-MM-dd'));\n    }, [habit.completions]);\n    const handlePrevYear = (0, react_1.useCallback)(() => {\n        setSelectedYear(prev => prev - 1);\n    }, []);\n    const handleNextYear = (0, react_1.useCallback)(() => {\n        setSelectedYear(prev => prev + 1);\n    }, []);\n    return ((0, jsx_runtime_1.jsxs)(material_1.Paper, { elevation: 0, sx: {\n            p: 1.5,\n            pb: 0,\n            mb: 1,\n            bgcolor: 'background.paper',\n            display: 'flex',\n            flexDirection: 'column',\n            border: '1px solid',\n            borderColor: 'divider',\n        }, children: [(0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { width: 'fit-content', mx: 'auto', mb: 0 }, children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"h5\", align: \"center\", noWrap: true, title: habit.name, sx: {\n                            mt: 0,\n                            mb: 1,\n                            maxWidth: `calc(${grid.length * 16 + 32}px)`,\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            color: habit.color,\n                            fontWeight: 'bold',\n                            textShadow: '0px 0px 1px rgba(0,0,0,0.2)'\n                        }, children: habit.name }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 0.5 }, children: [(0, jsx_runtime_1.jsx)(material_1.Box, { sx: { display: 'flex', alignItems: 'center' }, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center' }, children: [(0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", onClick: handlePrevYear, children: (0, jsx_runtime_1.jsx)(icons_material_1.ChevronLeft, { fontSize: \"small\" }) }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"body2\", sx: { mx: 0.5, fontWeight: 'bold' }, children: selectedYear }), (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", onClick: handleNextYear, disabled: selectedYear >= new Date().getFullYear(), children: (0, jsx_runtime_1.jsx)(icons_material_1.ChevronRight, { fontSize: \"small\" }) })] }) }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center', gap: 0.5 }, children: [(0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: `Current streak: ${streak} days`, children: (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: \"body2\", color: \"text.secondary\", children: [\"\\uD83D\\uDD25 \", streak] }) }), (0, jsx_runtime_1.jsx)(material_1.Button, { variant: \"outlined\", size: \"small\", startIcon: (0, jsx_runtime_1.jsx)(icons_material_1.Add, {}), onClick: () => {\n                                            setSelectedDate(new Date());\n                                            setIsLogDialogOpen(true);\n                                        }, sx: { py: 0.5, px: 1 }, children: \"Log\" }), (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", color: \"error\", onClick: () => setIsDeleteDialogOpen(true), children: (0, jsx_runtime_1.jsx)(icons_material_1.Delete, {}) })] })] }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: { display: 'flex', alignItems: 'center', mb: 0.5, ml: '32px' }, children: grid.map((col, colIdx) => {\n                            const label = monthLabels.find(m => m.col === colIdx);\n                            return label ? ((0, jsx_runtime_1.jsx)(material_1.Box, { sx: { width: 16, textAlign: 'center' }, children: (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: { fontSize: '0.65rem', color: 'text.secondary' }, children: label.month }) }, colIdx)) : (0, jsx_runtime_1.jsx)(material_1.Box, { sx: { width: 16 } }, colIdx);\n                        }) }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'grid', gridTemplateColumns: `32px repeat(${grid.length}, 16px)`, gap: 0.25, mb: 0 }, children: [[0, 1, 2, 3, 4, 5, 6].map((weekday) => ((0, jsx_runtime_1.jsx)(material_1.Box, { sx: { gridColumn: 1, gridRow: weekday + 1, justifySelf: 'end', pr: 0.5 }, children: (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: { fontSize: '0.65rem', color: 'text.secondary' }, children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][weekday].substring(0, 1) }) }, weekday))), grid.map((col, colIdx) => ([0, 1, 2, 3, 4, 5, 6].map((rowIdx) => {\n                                const day = col[rowIdx];\n                                if (!day)\n                                    return (0, jsx_runtime_1.jsx)(material_1.Box, { sx: { gridColumn: colIdx + 2, gridRow: rowIdx + 1, width: 16, height: 16 } }, `empty-${colIdx}-${rowIdx}`);\n                                const isCompleted = isDayCompleted(day);\n                                const isFuture = (0, date_fns_1.isAfter)(day, new Date());\n                                const isCurrentDay = (0, date_fns_1.isToday)(day);\n                                return ((0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                        gridColumn: colIdx + 2,\n                                        gridRow: rowIdx + 1,\n                                        width: 16,\n                                        height: 16,\n                                        bgcolor: isCompleted ? habit.color + '99' : 'transparent',\n                                        border: isCurrentDay ? `1px solid ${habit.color}` : '1px solid #e0e0e0',\n                                        borderRadius: '2px',\n                                        cursor: isFuture ? 'not-allowed' : 'pointer',\n                                        opacity: isFuture ? 0.3 : 1,\n                                    }, onClick: () => !isFuture && handleDayClick(day) }, day.toString()));\n                            })))] })] }), (0, jsx_runtime_1.jsxs)(material_1.Dialog, { open: isLogDialogOpen, onClose: () => setIsLogDialogOpen(false), maxWidth: \"xs\", fullWidth: true, children: [(0, jsx_runtime_1.jsxs)(material_1.DialogTitle, { children: [\"Log \", habit.name] }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { mt: 2 }, children: [(0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: \"subtitle2\", gutterBottom: true, children: [\"Date: \", (0, date_fns_1.format)(selectedDate, 'MMMM d, yyyy')] }), (0, jsx_runtime_1.jsx)(material_1.FormControlLabel, { control: (0, jsx_runtime_1.jsx)(material_1.Checkbox, { checked: useCheckbox, onChange: (e) => setUseCheckbox(e.target.checked) }), label: \"Mark as completed\" }), !useCheckbox && ((0, jsx_runtime_1.jsx)(material_1.TextField, { fullWidth: true, type: \"number\", label: `Quantity${habit.unit ? ` (${habit.unit})` : ''}`, value: quantity, onChange: (e) => {\n                                        const val = e.target.value;\n                                        if (val === '' || (Number(val) >= 0 && Number(val) <= 1000000)) {\n                                            setQuantity(val === '' ? '' : Number(val));\n                                        }\n                                    }, sx: { mt: 2 }, inputProps: {\n                                        min: 0,\n                                        max: 1000000,\n                                    } }))] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => setIsLogDialogOpen(false), children: \"Cancel\" }), isDayCompleted(selectedDate) && ((0, jsx_runtime_1.jsx)(material_1.Button, { color: \"warning\", onClick: () => {\n                                    onToggleCompletion((0, date_fns_1.format)(selectedDate, 'yyyy-MM-dd'));\n                                    setIsLogDialogOpen(false);\n                                }, children: \"Undo\" })), (0, jsx_runtime_1.jsx)(material_1.Button, { onClick: handleLogSubmit, variant: \"contained\", disabled: !useCheckbox && quantity === '', children: \"Save\" })] })] }), (0, jsx_runtime_1.jsxs)(material_1.Dialog, { open: isDeleteDialogOpen, onClose: () => setIsDeleteDialogOpen(false), maxWidth: \"xs\", fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.DialogTitle, { children: \"Delete Habit\" }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { children: (0, jsx_runtime_1.jsxs)(material_1.Typography, { children: [\"Are you sure you want to delete \\\"\", habit.name, \"\\\"? This action cannot be undone.\"] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => setIsDeleteDialogOpen(false), children: \"Cancel\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { onClick: () => {\n                                    onDelete();\n                                    setIsDeleteDialogOpen(false);\n                                }, color: \"error\", variant: \"contained\", children: \"Delete\" })] })] })] }));\n};\nexports[\"default\"] = HabitCard;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTg3MjIyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsY0FBYztBQUN6RTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixtQkFBTyxDQUFDLCtCQUFtQjtBQUNqRCw2QkFBNkIsbUJBQU8sQ0FBQyxtQkFBTztBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQywyQkFBZTtBQUMxQyx5QkFBeUIsbUJBQU8sQ0FBQyxpQ0FBcUI7QUFDdEQsbUJBQW1CLG1CQUFPLENBQUMsc0JBQVU7QUFDckMscUJBQXFCLHFDQUFxQztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxnQ0FBZ0M7QUFDbkYsS0FBSztBQUNMO0FBQ0EsdUtBQXVLLGlCQUFpQjtBQUN4TCx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGtCQUFrQjtBQUN2RDtBQUNBLDBGQUEwRixpQkFBaUI7QUFDM0cseURBQXlEO0FBQ3pELGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGtFQUFrRTtBQUNwRztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTCx3REFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsdURBQXVELE1BQU0seUNBQXlDLDZEQUE2RDtBQUM1SztBQUNBO0FBQ0EsOENBQThDLHNCQUFzQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdCQUF3Qiw2Q0FBNkMsTUFBTSxpRkFBaUYsc0RBQXNELE1BQU0sdUNBQXVDLHNEQUFzRCxNQUFNLHVDQUF1Qyw2REFBNkQseUdBQXlHLG1CQUFtQixHQUFHLG1EQUFtRCx3QkFBd0IsNkJBQTZCLDBCQUEwQixtREFBbUQsOEpBQThKLG1CQUFtQixHQUFHLElBQUksR0FBRyw2Q0FBNkMsTUFBTSxpREFBaUQsMERBQTBELDBCQUEwQixRQUFRLGtFQUFrRSxnRkFBZ0YsR0FBRywrQ0FBK0MsOEZBQThGO0FBQ3o0QztBQUNBO0FBQ0EseUNBQXlDLFFBQVEsZ0JBQWdCLG1CQUFtQixtREFBbUQsdUlBQXVJLEdBQUcsSUFBSSxJQUFJLDRDQUE0QyxNQUFNLDREQUE0RDtBQUN2WTtBQUNBLHFGQUFxRixNQUFNLGdDQUFnQyw0REFBNEQsMEJBQTBCLDhDQUE4Qyx5QkFBeUIsR0FBRyxzREFBc0QsTUFBTSxhQUFhO0FBQ3BXLHlCQUF5QixHQUFHLDZDQUE2QyxNQUFNLHFEQUFxRCxZQUFZLDRCQUE0Qiw4RkFBOEYsTUFBTSxrRUFBa0UsNERBQTRELDBCQUEwQiw4Q0FBOEMsd0ZBQXdGLEdBQUc7QUFDampCO0FBQ0E7QUFDQSxvRkFBb0YsTUFBTSxzRUFBc0UsV0FBVyxPQUFPLEdBQUcsT0FBTztBQUM1TDtBQUNBO0FBQ0E7QUFDQSxpRkFBaUY7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxZQUFZO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxtREFBbUQ7QUFDeEYsNkJBQTZCLE1BQU0sSUFBSSxnREFBZ0QsK0pBQStKLGdDQUFnQyxzREFBc0Qsb0RBQW9ELE1BQU0sT0FBTyw4REFBOEQsc0hBQXNILHlEQUF5RCx1REFBdUQseUVBQXlFLCtCQUErQixtRUFBbUUsbURBQW1ELGtCQUFrQixXQUFXLFFBQVE7QUFDcDdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLFFBQVEsT0FBTztBQUNwRDtBQUNBO0FBQ0EsdUNBQXVDLEtBQUssR0FBRyx1REFBdUQsdURBQXVELDhEQUE4RCxnRkFBZ0Y7QUFDM1M7QUFDQTtBQUNBLGlDQUFpQyxvQkFBb0IsZ0RBQWdELDZHQUE2RyxJQUFJLElBQUksZ0RBQWdELG9LQUFvSywwQkFBMEIsc0RBQXNELDJEQUEyRCxtR0FBbUcsR0FBRyx1REFBdUQsdURBQXVELGlFQUFpRSwrQ0FBK0M7QUFDNzNCO0FBQ0E7QUFDQSxpQ0FBaUMsNERBQTRELElBQUksSUFBSSxJQUFJO0FBQ3pHO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc2NlbnQvLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9IYWJpdENhcmQudHN4PzQzZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG93bktleXMgPSBmdW5jdGlvbihvKSB7XG4gICAgICAgIG93bktleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiAobykge1xuICAgICAgICAgICAgdmFyIGFyID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBrIGluIG8pIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobywgaykpIGFyW2FyLmxlbmd0aF0gPSBrO1xuICAgICAgICAgICAgcmV0dXJuIGFyO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gb3duS2V5cyhvKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAobW9kKSB7XG4gICAgICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICAgICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrID0gb3duS2V5cyhtb2QpLCBpID0gMDsgaSA8IGsubGVuZ3RoOyBpKyspIGlmIChrW2ldICE9PSBcImRlZmF1bHRcIikgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrW2ldKTtcbiAgICAgICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGpzeF9ydW50aW1lXzEgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCByZWFjdF8xID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBtYXRlcmlhbF8xID0gcmVxdWlyZShcIkBtdWkvbWF0ZXJpYWxcIik7XG5jb25zdCBpY29uc19tYXRlcmlhbF8xID0gcmVxdWlyZShcIkBtdWkvaWNvbnMtbWF0ZXJpYWxcIik7XG5jb25zdCBkYXRlX2Zuc18xID0gcmVxdWlyZShcImRhdGUtZm5zXCIpO1xuY29uc3QgSGFiaXRDYXJkID0gKHsgaGFiaXQsIG9uVG9nZ2xlQ29tcGxldGlvbiwgb25EZWxldGUgfSkgPT4ge1xuICAgIGNvbnN0IFtpc0xvZ0RpYWxvZ09wZW4sIHNldElzTG9nRGlhbG9nT3Blbl0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoZmFsc2UpO1xuICAgIGNvbnN0IFtpc0RlbGV0ZURpYWxvZ09wZW4sIHNldElzRGVsZXRlRGlhbG9nT3Blbl0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoZmFsc2UpO1xuICAgIGNvbnN0IFtzZWxlY3RlZERhdGUsIHNldFNlbGVjdGVkRGF0ZV0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkobmV3IERhdGUoKSk7XG4gICAgY29uc3QgW3F1YW50aXR5LCBzZXRRdWFudGl0eV0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoJycpO1xuICAgIGNvbnN0IFt1c2VDaGVja2JveCwgc2V0VXNlQ2hlY2tib3hdID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKHRydWUpO1xuICAgIGNvbnN0IFtzZWxlY3RlZFllYXIsIHNldFNlbGVjdGVkWWVhcl0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkobmV3IERhdGUoKS5nZXRGdWxsWWVhcigpKTtcbiAgICAvLyBCdWlsZCBhIEdpdEh1Yi1zdHlsZSBoZWF0bWFwIGdyaWQgZm9yIHRoZSBzZWxlY3RlZCB5ZWFyXG4gICAgY29uc3QgZGF5c09mWWVhciA9ICgwLCByZWFjdF8xLnVzZU1lbW8pKCgpID0+IHtcbiAgICAgICAgY29uc3QgeWVhclN0YXJ0ID0gKDAsIGRhdGVfZm5zXzEuc3RhcnRPZlllYXIpKG5ldyBEYXRlKHNlbGVjdGVkWWVhciwgMCwgMSkpO1xuICAgICAgICBjb25zdCB5ZWFyRW5kID0gKDAsIGRhdGVfZm5zXzEuZW5kT2ZZZWFyKShuZXcgRGF0ZShzZWxlY3RlZFllYXIsIDExLCAzMSkpO1xuICAgICAgICByZXR1cm4gKDAsIGRhdGVfZm5zXzEuZWFjaERheU9mSW50ZXJ2YWwpKHsgc3RhcnQ6IHllYXJTdGFydCwgZW5kOiB5ZWFyRW5kIH0pO1xuICAgIH0sIFtzZWxlY3RlZFllYXJdKTtcbiAgICBjb25zdCBmaXJzdERheU9mWWVhciA9ICgwLCByZWFjdF8xLnVzZU1lbW8pKCgpID0+ICgwLCBkYXRlX2Zuc18xLnN0YXJ0T2ZZZWFyKShuZXcgRGF0ZShzZWxlY3RlZFllYXIsIDAsIDEpKSwgW3NlbGVjdGVkWWVhcl0pO1xuICAgIGNvbnN0IG51bVdlZWtzID0gKDAsIHJlYWN0XzEudXNlTWVtbykoKCkgPT4gKDAsIGRhdGVfZm5zXzEuZGlmZmVyZW5jZUluQ2FsZW5kYXJXZWVrcykoKDAsIGRhdGVfZm5zXzEuZW5kT2ZZZWFyKShuZXcgRGF0ZShzZWxlY3RlZFllYXIsIDExLCAzMSkpLCBmaXJzdERheU9mWWVhciwgeyB3ZWVrU3RhcnRzT246IDAgfSkgKyAxLCBbc2VsZWN0ZWRZZWFyLCBmaXJzdERheU9mWWVhcl0pO1xuICAgIGNvbnN0IG51bVJvd3MgPSA3OyAvLyBTdW4tU2F0XG4gICAgLy8gQnVpbGQgZ3JpZDogZ3JpZFtjb2xdW3Jvd10gPSBkYXRlIG9yIG51bGxcbiAgICAvLyBDb2wgPSB3ZWVrLCBSb3cgPSB3ZWVrZGF5XG4gICAgY29uc3QgZ3JpZCA9ICgwLCByZWFjdF8xLnVzZU1lbW8pKCgpID0+IHtcbiAgICAgICAgY29uc3QgbmV3R3JpZCA9IEFycmF5LmZyb20oeyBsZW5ndGg6IG51bVdlZWtzIH0sICgpID0+IEFycmF5KG51bVJvd3MpLmZpbGwobnVsbCkpO1xuICAgICAgICBkYXlzT2ZZZWFyLmZvckVhY2goZGF5ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHdlZWsgPSAoMCwgZGF0ZV9mbnNfMS5kaWZmZXJlbmNlSW5DYWxlbmRhcldlZWtzKShkYXksIGZpcnN0RGF5T2ZZZWFyLCB7IHdlZWtTdGFydHNPbjogMCB9KTtcbiAgICAgICAgICAgIGNvbnN0IHdlZWtkYXkgPSAoMCwgZGF0ZV9mbnNfMS5nZXREYXkpKGRheSk7IC8vIDA9U3VuLCA2PVNhdFxuICAgICAgICAgICAgaWYgKHdlZWsgPj0gMCAmJiB3ZWVrIDwgbnVtV2Vla3MpIHsgLy8gT25seSBpbmNsdWRlIGRheXMgaW4gdGhpcyB5ZWFyXG4gICAgICAgICAgICAgICAgbmV3R3JpZFt3ZWVrXVt3ZWVrZGF5XSA9IGRheTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBuZXdHcmlkO1xuICAgIH0sIFtkYXlzT2ZZZWFyLCBmaXJzdERheU9mWWVhciwgbnVtV2Vla3MsIG51bVJvd3NdKTtcbiAgICAvLyBGb3IgbW9udGggbGFiZWxzOiBtYXAgY29sSWR4IHRvIG1vbnRoIGlmIHRoZSBmaXJzdCBkYXkgaW4gdGhlIGNvbHVtbiBpcyBpbiBhIG5ldyBtb250aFxuICAgIGNvbnN0IG1vbnRoTGFiZWxzID0gKDAsIHJlYWN0XzEudXNlTWVtbykoKCkgPT4ge1xuICAgICAgICBjb25zdCBsYWJlbHMgPSBbXTtcbiAgICAgICAgbGV0IGxhc3RNb250aCA9IC0xO1xuICAgICAgICBncmlkLmZvckVhY2goKGNvbCwgY29sSWR4KSA9PiB7XG4gICAgICAgICAgICAvLyBGaW5kIGZpcnN0IGRheSBpbiB0aGUgY29sdW1uXG4gICAgICAgICAgICBjb25zdCBmaXJzdERheUluQ29sID0gY29sLmZpbmQoZGF5ID0+IGRheSAhPT0gbnVsbCk7XG4gICAgICAgICAgICBpZiAoZmlyc3REYXlJbkNvbCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG0gPSAoMCwgZGF0ZV9mbnNfMS5nZXRNb250aCkoZmlyc3REYXlJbkNvbCk7XG4gICAgICAgICAgICAgICAgaWYgKG0gIT09IGxhc3RNb250aCkge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbHMucHVzaCh7IGNvbDogY29sSWR4LCBtb250aDogKDAsIGRhdGVfZm5zXzEuZm9ybWF0KShmaXJzdERheUluQ29sLCAnTU1NJykgfSk7XG4gICAgICAgICAgICAgICAgICAgIGxhc3RNb250aCA9IG07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGxhYmVscztcbiAgICB9LCBbZ3JpZF0pO1xuICAgIGNvbnN0IGlzSGFiaXRDb21wbGV0ZWQgPSAoMCwgcmVhY3RfMS51c2VDYWxsYmFjaykoKGRhdGUpID0+IHtcbiAgICAgICAgcmV0dXJuIGhhYml0LmNvbXBsZXRpb25zLnNvbWUoY29tcGxldGlvbiA9PiBjb21wbGV0aW9uLmRhdGUgPT09ICgwLCBkYXRlX2Zuc18xLmZvcm1hdCkoZGF0ZSwgJ3l5eXktTU0tZGQnKSk7XG4gICAgfSwgW2hhYml0LmNvbXBsZXRpb25zXSk7XG4gICAgY29uc3QgY2FsY3VsYXRlU3RyZWFrID0gKDAsIHJlYWN0XzEudXNlQ2FsbGJhY2spKCgpID0+IHtcbiAgICAgICAgbGV0IHN0cmVhayA9IDA7XG4gICAgICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcbiAgICAgICAgbGV0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcbiAgICAgICAgd2hpbGUgKGlzSGFiaXRDb21wbGV0ZWQoY3VycmVudERhdGUpICYmICEoMCwgZGF0ZV9mbnNfMS5pc0FmdGVyKShjdXJyZW50RGF0ZSwgdG9kYXkpKSB7XG4gICAgICAgICAgICBzdHJlYWsrKztcbiAgICAgICAgICAgIGN1cnJlbnREYXRlLnNldERhdGUoY3VycmVudERhdGUuZ2V0RGF0ZSgpIC0gMSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0cmVhaztcbiAgICB9LCBbaXNIYWJpdENvbXBsZXRlZF0pO1xuICAgIGNvbnN0IGhhbmRsZUxvZ1N1Ym1pdCA9ICgwLCByZWFjdF8xLnVzZUNhbGxiYWNrKSgoKSA9PiB7XG4gICAgICAgIGlmICh1c2VDaGVja2JveCkge1xuICAgICAgICAgICAgb25Ub2dnbGVDb21wbGV0aW9uKCgwLCBkYXRlX2Zuc18xLmZvcm1hdCkoc2VsZWN0ZWREYXRlLCAneXl5eS1NTS1kZCcpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChxdWFudGl0eSAhPT0gJycpIHtcbiAgICAgICAgICAgIG9uVG9nZ2xlQ29tcGxldGlvbigoMCwgZGF0ZV9mbnNfMS5mb3JtYXQpKHNlbGVjdGVkRGF0ZSwgJ3l5eXktTU0tZGQnKSwgTnVtYmVyKHF1YW50aXR5KSk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0SXNMb2dEaWFsb2dPcGVuKGZhbHNlKTtcbiAgICAgICAgc2V0UXVhbnRpdHkoJycpO1xuICAgICAgICBzZXRVc2VDaGVja2JveCh0cnVlKTtcbiAgICB9LCBbdXNlQ2hlY2tib3gsIHNlbGVjdGVkRGF0ZSwgcXVhbnRpdHksIG9uVG9nZ2xlQ29tcGxldGlvbl0pO1xuICAgIGNvbnN0IGhhbmRsZURheUNsaWNrID0gKDAsIHJlYWN0XzEudXNlQ2FsbGJhY2spKChkYXkpID0+IHtcbiAgICAgICAgaWYgKCgwLCBkYXRlX2Zuc18xLmlzQWZ0ZXIpKGRheSwgbmV3IERhdGUoKSkpIHtcbiAgICAgICAgICAgIHJldHVybjsgLy8gRG9uJ3QgYWxsb3cgbG9nZ2luZyBmdXR1cmUgZGF0ZXNcbiAgICAgICAgfVxuICAgICAgICBzZXRTZWxlY3RlZERhdGUoZGF5KTtcbiAgICAgICAgc2V0SXNMb2dEaWFsb2dPcGVuKHRydWUpO1xuICAgIH0sIFtdKTtcbiAgICBjb25zdCBzdHJlYWsgPSAoMCwgcmVhY3RfMS51c2VNZW1vKSgoKSA9PiBjYWxjdWxhdGVTdHJlYWsoKSwgW2NhbGN1bGF0ZVN0cmVha10pO1xuICAgIGNvbnN0IGlzRGF5Q29tcGxldGVkID0gKDAsIHJlYWN0XzEudXNlQ2FsbGJhY2spKChkYXRlKSA9PiB7XG4gICAgICAgIHJldHVybiBoYWJpdC5jb21wbGV0aW9ucy5zb21lKGNvbXBsZXRpb24gPT4gY29tcGxldGlvbi5kYXRlID09PSAoMCwgZGF0ZV9mbnNfMS5mb3JtYXQpKGRhdGUsICd5eXl5LU1NLWRkJykpO1xuICAgIH0sIFtoYWJpdC5jb21wbGV0aW9uc10pO1xuICAgIGNvbnN0IGhhbmRsZVByZXZZZWFyID0gKDAsIHJlYWN0XzEudXNlQ2FsbGJhY2spKCgpID0+IHtcbiAgICAgICAgc2V0U2VsZWN0ZWRZZWFyKHByZXYgPT4gcHJldiAtIDEpO1xuICAgIH0sIFtdKTtcbiAgICBjb25zdCBoYW5kbGVOZXh0WWVhciA9ICgwLCByZWFjdF8xLnVzZUNhbGxiYWNrKSgoKSA9PiB7XG4gICAgICAgIHNldFNlbGVjdGVkWWVhcihwcmV2ID0+IHByZXYgKyAxKTtcbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLlBhcGVyLCB7IGVsZXZhdGlvbjogMCwgc3g6IHtcbiAgICAgICAgICAgIHA6IDEuNSxcbiAgICAgICAgICAgIHBiOiAwLFxuICAgICAgICAgICAgbWI6IDEsXG4gICAgICAgICAgICBiZ2NvbG9yOiAnYmFja2dyb3VuZC5wYXBlcicsXG4gICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCcsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogJ2RpdmlkZXInLFxuICAgICAgICB9LCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeHMpKG1hdGVyaWFsXzEuQm94LCB7IHN4OiB7IHdpZHRoOiAnZml0LWNvbnRlbnQnLCBteDogJ2F1dG8nLCBtYjogMCB9LCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5UeXBvZ3JhcGh5LCB7IHZhcmlhbnQ6IFwiaDVcIiwgYWxpZ246IFwiY2VudGVyXCIsIG5vV3JhcDogdHJ1ZSwgdGl0bGU6IGhhYml0Lm5hbWUsIHN4OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXQ6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWI6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4V2lkdGg6IGBjYWxjKCR7Z3JpZC5sZW5ndGggKiAxNiArIDMyfXB4KWAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRPdmVyZmxvdzogJ2VsbGlwc2lzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogaGFiaXQuY29sb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRTaGFkb3c6ICcwcHggMHB4IDFweCByZ2JhKDAsMCwwLDAuMiknXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjaGlsZHJlbjogaGFiaXQubmFtZSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5Cb3gsIHsgc3g6IHsgZGlzcGxheTogJ2ZsZXgnLCBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgbWI6IDAuNSB9LCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5Cb3gsIHsgc3g6IHsgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJyB9LCBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5Cb3gsIHsgc3g6IHsgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJyB9LCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5JY29uQnV0dG9uLCB7IHNpemU6IFwic21hbGxcIiwgb25DbGljazogaGFuZGxlUHJldlllYXIsIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKGljb25zX21hdGVyaWFsXzEuQ2hldnJvbkxlZnQsIHsgZm9udFNpemU6IFwic21hbGxcIiB9KSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLlR5cG9ncmFwaHksIHsgdmFyaWFudDogXCJib2R5MlwiLCBzeDogeyBteDogMC41LCBmb250V2VpZ2h0OiAnYm9sZCcgfSwgY2hpbGRyZW46IHNlbGVjdGVkWWVhciB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkljb25CdXR0b24sIHsgc2l6ZTogXCJzbWFsbFwiLCBvbkNsaWNrOiBoYW5kbGVOZXh0WWVhciwgZGlzYWJsZWQ6IHNlbGVjdGVkWWVhciA+PSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCksIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKGljb25zX21hdGVyaWFsXzEuQ2hldnJvblJpZ2h0LCB7IGZvbnRTaXplOiBcInNtYWxsXCIgfSkgfSldIH0pIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLkJveCwgeyBzeDogeyBkaXNwbGF5OiAnZmxleCcsIGFsaWduSXRlbXM6ICdjZW50ZXInLCBnYXA6IDAuNSB9LCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5Ub29sdGlwLCB7IHRpdGxlOiBgQ3VycmVudCBzdHJlYWs6ICR7c3RyZWFrfSBkYXlzYCwgY2hpbGRyZW46ICgwLCBqc3hfcnVudGltZV8xLmpzeHMpKG1hdGVyaWFsXzEuVHlwb2dyYXBoeSwgeyB2YXJpYW50OiBcImJvZHkyXCIsIGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsIGNoaWxkcmVuOiBbXCJcXHVEODNEXFx1REQyNSBcIiwgc3RyZWFrXSB9KSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJ1dHRvbiwgeyB2YXJpYW50OiBcIm91dGxpbmVkXCIsIHNpemU6IFwic21hbGxcIiwgc3RhcnRJY29uOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKGljb25zX21hdGVyaWFsXzEuQWRkLCB7fSksIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0U2VsZWN0ZWREYXRlKG5ldyBEYXRlKCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRJc0xvZ0RpYWxvZ09wZW4odHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgc3g6IHsgcHk6IDAuNSwgcHg6IDEgfSwgY2hpbGRyZW46IFwiTG9nXCIgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5JY29uQnV0dG9uLCB7IHNpemU6IFwic21hbGxcIiwgY29sb3I6IFwiZXJyb3JcIiwgb25DbGljazogKCkgPT4gc2V0SXNEZWxldGVEaWFsb2dPcGVuKHRydWUpLCBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShpY29uc19tYXRlcmlhbF8xLkRlbGV0ZSwge30pIH0pXSB9KV0gfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5Cb3gsIHsgc3g6IHsgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgbWI6IDAuNSwgbWw6ICczMnB4JyB9LCBjaGlsZHJlbjogZ3JpZC5tYXAoKGNvbCwgY29sSWR4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGFiZWwgPSBtb250aExhYmVscy5maW5kKG0gPT4gbS5jb2wgPT09IGNvbElkeCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGxhYmVsID8gKCgwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5Cb3gsIHsgc3g6IHsgd2lkdGg6IDE2LCB0ZXh0QWxpZ246ICdjZW50ZXInIH0sIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuVHlwb2dyYXBoeSwgeyB2YXJpYW50OiBcImNhcHRpb25cIiwgc3g6IHsgZm9udFNpemU6ICcwLjY1cmVtJywgY29sb3I6ICd0ZXh0LnNlY29uZGFyeScgfSwgY2hpbGRyZW46IGxhYmVsLm1vbnRoIH0pIH0sIGNvbElkeCkpIDogKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJveCwgeyBzeDogeyB3aWR0aDogMTYgfSB9LCBjb2xJZHgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeHMpKG1hdGVyaWFsXzEuQm94LCB7IHN4OiB7IGRpc3BsYXk6ICdncmlkJywgZ3JpZFRlbXBsYXRlQ29sdW1uczogYDMycHggcmVwZWF0KCR7Z3JpZC5sZW5ndGh9LCAxNnB4KWAsIGdhcDogMC4yNSwgbWI6IDAgfSwgY2hpbGRyZW46IFtbMCwgMSwgMiwgMywgNCwgNSwgNl0ubWFwKCh3ZWVrZGF5KSA9PiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJveCwgeyBzeDogeyBncmlkQ29sdW1uOiAxLCBncmlkUm93OiB3ZWVrZGF5ICsgMSwganVzdGlmeVNlbGY6ICdlbmQnLCBwcjogMC41IH0sIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuVHlwb2dyYXBoeSwgeyB2YXJpYW50OiBcImNhcHRpb25cIiwgc3g6IHsgZm9udFNpemU6ICcwLjY1cmVtJywgY29sb3I6ICd0ZXh0LnNlY29uZGFyeScgfSwgY2hpbGRyZW46IFsnU3VuJywgJ01vbicsICdUdWUnLCAnV2VkJywgJ1RodScsICdGcmknLCAnU2F0J11bd2Vla2RheV0uc3Vic3RyaW5nKDAsIDEpIH0pIH0sIHdlZWtkYXkpKSksIGdyaWQubWFwKChjb2wsIGNvbElkeCkgPT4gKFswLCAxLCAyLCAzLCA0LCA1LCA2XS5tYXAoKHJvd0lkeCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXkgPSBjb2xbcm93SWR4XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkYXkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJveCwgeyBzeDogeyBncmlkQ29sdW1uOiBjb2xJZHggKyAyLCBncmlkUm93OiByb3dJZHggKyAxLCB3aWR0aDogMTYsIGhlaWdodDogMTYgfSB9LCBgZW1wdHktJHtjb2xJZHh9LSR7cm93SWR4fWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0NvbXBsZXRlZCA9IGlzRGF5Q29tcGxldGVkKGRheSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzRnV0dXJlID0gKDAsIGRhdGVfZm5zXzEuaXNBZnRlcikoZGF5LCBuZXcgRGF0ZSgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNDdXJyZW50RGF5ID0gKDAsIGRhdGVfZm5zXzEuaXNUb2RheSkoZGF5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuQm94LCB7IHN4OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZENvbHVtbjogY29sSWR4ICsgMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBncmlkUm93OiByb3dJZHggKyAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxNixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE2LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJnY29sb3I6IGlzQ29tcGxldGVkID8gaGFiaXQuY29sb3IgKyAnOTknIDogJ3RyYW5zcGFyZW50JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IGlzQ3VycmVudERheSA/IGAxcHggc29saWQgJHtoYWJpdC5jb2xvcn1gIDogJzFweCBzb2xpZCAjZTBlMGUwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICcycHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogaXNGdXR1cmUgPyAnbm90LWFsbG93ZWQnIDogJ3BvaW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IGlzRnV0dXJlID8gMC4zIDogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIG9uQ2xpY2s6ICgpID0+ICFpc0Z1dHVyZSAmJiBoYW5kbGVEYXlDbGljayhkYXkpIH0sIGRheS50b1N0cmluZygpKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpKV0gfSldIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLkRpYWxvZywgeyBvcGVuOiBpc0xvZ0RpYWxvZ09wZW4sIG9uQ2xvc2U6ICgpID0+IHNldElzTG9nRGlhbG9nT3BlbihmYWxzZSksIG1heFdpZHRoOiBcInhzXCIsIGZ1bGxXaWR0aDogdHJ1ZSwgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLkRpYWxvZ1RpdGxlLCB7IGNoaWxkcmVuOiBbXCJMb2cgXCIsIGhhYml0Lm5hbWVdIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuRGlhbG9nQ29udGVudCwgeyBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5Cb3gsIHsgc3g6IHsgbXQ6IDIgfSwgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLlR5cG9ncmFwaHksIHsgdmFyaWFudDogXCJzdWJ0aXRsZTJcIiwgZ3V0dGVyQm90dG9tOiB0cnVlLCBjaGlsZHJlbjogW1wiRGF0ZTogXCIsICgwLCBkYXRlX2Zuc18xLmZvcm1hdCkoc2VsZWN0ZWREYXRlLCAnTU1NTSBkLCB5eXl5JyldIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuRm9ybUNvbnRyb2xMYWJlbCwgeyBjb250cm9sOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuQ2hlY2tib3gsIHsgY2hlY2tlZDogdXNlQ2hlY2tib3gsIG9uQ2hhbmdlOiAoZSkgPT4gc2V0VXNlQ2hlY2tib3goZS50YXJnZXQuY2hlY2tlZCkgfSksIGxhYmVsOiBcIk1hcmsgYXMgY29tcGxldGVkXCIgfSksICF1c2VDaGVja2JveCAmJiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLlRleHRGaWVsZCwgeyBmdWxsV2lkdGg6IHRydWUsIHR5cGU6IFwibnVtYmVyXCIsIGxhYmVsOiBgUXVhbnRpdHkke2hhYml0LnVuaXQgPyBgICgke2hhYml0LnVuaXR9KWAgOiAnJ31gLCB2YWx1ZTogcXVhbnRpdHksIG9uQ2hhbmdlOiAoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbCA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWwgPT09ICcnIHx8IChOdW1iZXIodmFsKSA+PSAwICYmIE51bWJlcih2YWwpIDw9IDEwMDAwMDApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFF1YW50aXR5KHZhbCA9PT0gJycgPyAnJyA6IE51bWJlcih2YWwpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBzeDogeyBtdDogMiB9LCBpbnB1dFByb3BzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heDogMTAwMDAwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gfSkpXSB9KSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5EaWFsb2dBY3Rpb25zLCB7IGNoaWxkcmVuOiBbKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJ1dHRvbiwgeyBvbkNsaWNrOiAoKSA9PiBzZXRJc0xvZ0RpYWxvZ09wZW4oZmFsc2UpLCBjaGlsZHJlbjogXCJDYW5jZWxcIiB9KSwgaXNEYXlDb21wbGV0ZWQoc2VsZWN0ZWREYXRlKSAmJiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJ1dHRvbiwgeyBjb2xvcjogXCJ3YXJuaW5nXCIsIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uVG9nZ2xlQ29tcGxldGlvbigoMCwgZGF0ZV9mbnNfMS5mb3JtYXQpKHNlbGVjdGVkRGF0ZSwgJ3l5eXktTU0tZGQnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRJc0xvZ0RpYWxvZ09wZW4oZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBjaGlsZHJlbjogXCJVbmRvXCIgfSkpLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuQnV0dG9uLCB7IG9uQ2xpY2s6IGhhbmRsZUxvZ1N1Ym1pdCwgdmFyaWFudDogXCJjb250YWluZWRcIiwgZGlzYWJsZWQ6ICF1c2VDaGVja2JveCAmJiBxdWFudGl0eSA9PT0gJycsIGNoaWxkcmVuOiBcIlNhdmVcIiB9KV0gfSldIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLkRpYWxvZywgeyBvcGVuOiBpc0RlbGV0ZURpYWxvZ09wZW4sIG9uQ2xvc2U6ICgpID0+IHNldElzRGVsZXRlRGlhbG9nT3BlbihmYWxzZSksIG1heFdpZHRoOiBcInhzXCIsIGZ1bGxXaWR0aDogdHJ1ZSwgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuRGlhbG9nVGl0bGUsIHsgY2hpbGRyZW46IFwiRGVsZXRlIEhhYml0XCIgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5EaWFsb2dDb250ZW50LCB7IGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLlR5cG9ncmFwaHksIHsgY2hpbGRyZW46IFtcIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgXFxcIlwiLCBoYWJpdC5uYW1lLCBcIlxcXCI/IFRoaXMgYWN0aW9uIGNhbm5vdCBiZSB1bmRvbmUuXCJdIH0pIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShtYXRlcmlhbF8xLkRpYWxvZ0FjdGlvbnMsIHsgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuQnV0dG9uLCB7IG9uQ2xpY2s6ICgpID0+IHNldElzRGVsZXRlRGlhbG9nT3BlbihmYWxzZSksIGNoaWxkcmVuOiBcIkNhbmNlbFwiIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuQnV0dG9uLCB7IG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRGVsZXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRJc0RlbGV0ZURpYWxvZ09wZW4oZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBjb2xvcjogXCJlcnJvclwiLCB2YXJpYW50OiBcImNvbnRhaW5lZFwiLCBjaGlsZHJlbjogXCJEZWxldGVcIiB9KV0gfSldIH0pXSB9KSk7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gSGFiaXRDYXJkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///587222\n");

/***/ }),

/***/ 675621:
/*!****************************************************!*\
  !*** ./src/renderer/components/AddHabitDialog.tsx ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst HabitContext_1 = __webpack_require__(/*! ../context/HabitContext */ 199684);\nconst FREQUENCY_DESCRIPTIONS = {\n    daily: 'Track this habit every day',\n    weekly: 'Track this habit on a weekly basis',\n    monthly: 'Track this habit monthly',\n};\nconst AddHabitDialog = ({ open, onClose }) => {\n    const { addHabit, error: contextError } = (0, HabitContext_1.useHabits)();\n    const [name, setName] = (0, react_1.useState)('');\n    const [description, setDescription] = (0, react_1.useState)('');\n    const [frequency, setFrequency] = (0, react_1.useState)('daily');\n    const [color, setColor] = (0, react_1.useState)('#1976d2');\n    const [trackQuantity, setTrackQuantity] = (0, react_1.useState)(false);\n    const [unit, setUnit] = (0, react_1.useState)('');\n    const [validationError, setValidationError] = (0, react_1.useState)(null);\n    const [isSubmitting, setIsSubmitting] = (0, react_1.useState)(false);\n    const resetForm = (0, react_1.useCallback)(() => {\n        setName('');\n        setDescription('');\n        setFrequency('daily');\n        setColor('#1976d2');\n        setTrackQuantity(false);\n        setUnit('');\n        setValidationError(null);\n    }, []);\n    (0, react_1.useEffect)(() => {\n        if (!open) {\n            const timer = setTimeout(() => {\n                resetForm();\n                setIsSubmitting(false);\n            }, 300);\n            return () => clearTimeout(timer);\n        }\n    }, [open, resetForm]);\n    const handleClose = (0, react_1.useCallback)(() => {\n        if (isSubmitting)\n            return;\n        onClose();\n    }, [onClose, isSubmitting]);\n    const validateForm = (0, react_1.useCallback)(() => {\n        if (!name.trim()) {\n            setValidationError('Habit name is required');\n            return false;\n        }\n        if (name.trim().length > 50) {\n            setValidationError('Habit name must be less than 50 characters');\n            return false;\n        }\n        if (description.length > 200) {\n            setValidationError('Description must be less than 200 characters');\n            return false;\n        }\n        if (trackQuantity && !unit.trim()) {\n            setValidationError('Unit is required when tracking quantity');\n            return false;\n        }\n        if (trackQuantity && unit.trim().length > 20) {\n            setValidationError('Unit must be less than 20 characters');\n            return false;\n        }\n        setValidationError(null);\n        return true;\n    }, [name, description, trackQuantity, unit]);\n    const handleSubmit = (0, react_1.useCallback)((e) => {\n        e.preventDefault();\n        if (!validateForm() || isSubmitting) {\n            return;\n        }\n        setIsSubmitting(true);\n        addHabit({\n            name: name.trim(),\n            description: description.trim(),\n            frequency,\n            color,\n            trackQuantity,\n            unit: trackQuantity ? unit.trim() : undefined,\n        });\n        setTimeout(() => {\n            onClose();\n            setIsSubmitting(false);\n        }, 50);\n    }, [name, description, frequency, color, trackQuantity, unit, addHabit, onClose, validateForm, isSubmitting]);\n    return ((0, jsx_runtime_1.jsx)(material_1.Dialog, { open: open, onClose: handleClose, maxWidth: \"sm\", fullWidth: true, PaperProps: {\n            sx: { minHeight: '50vh' }\n        }, TransitionProps: {\n            onExited: resetForm\n        }, children: (0, jsx_runtime_1.jsxs)(\"form\", { onSubmit: handleSubmit, children: [(0, jsx_runtime_1.jsx)(material_1.DialogTitle, { children: \"Add New Habit\" }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', flexDirection: 'column', gap: 2, mt: 1 }, children: [(validationError || contextError) && ((0, jsx_runtime_1.jsx)(material_1.Alert, { severity: \"error\", sx: { mb: 2 }, children: validationError || contextError })), (0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Habit Name\", value: name, onChange: (e) => setName(e.target.value), required: true, fullWidth: true, error: !!validationError && validationError.includes('name'), helperText: `${name.length}/50 characters`, InputProps: {\n                                    endAdornment: ((0, jsx_runtime_1.jsx)(material_1.InputAdornment, { position: \"end\", children: (0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: \"Enter a clear, concise name for your habit\", children: (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", children: (0, jsx_runtime_1.jsx)(icons_material_1.Help, { fontSize: \"small\" }) }) }) })),\n                                } }), (0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Description\", value: description, onChange: (e) => setDescription(e.target.value), multiline: true, rows: 2, fullWidth: true, error: !!validationError && validationError.includes('Description'), helperText: `${description.length}/200 characters` }), (0, jsx_runtime_1.jsxs)(material_1.FormControl, { fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.InputLabel, { children: \"Frequency\" }), (0, jsx_runtime_1.jsx)(material_1.Select, { value: frequency, label: \"Frequency\", onChange: (e) => setFrequency(e.target.value), children: Object.entries(FREQUENCY_DESCRIPTIONS).map(([value, description]) => ((0, jsx_runtime_1.jsx)(material_1.MenuItem, { value: value, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { children: [(0, jsx_runtime_1.jsx)(material_1.Box, { children: value.charAt(0).toUpperCase() + value.slice(1) }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: { fontSize: '0.75rem', color: 'text.secondary' }, children: description })] }) }, value))) })] }), (0, jsx_runtime_1.jsxs)(material_1.FormControl, { fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.InputLabel, { shrink: true, htmlFor: \"color-input\", children: \"Color\" }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center', gap: 2, mt: 2 }, children: [(0, jsx_runtime_1.jsx)(material_1.TextField, { id: \"color-input\", type: \"color\", value: color, onChange: (e) => setColor(e.target.value), sx: { width: 100 } }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                                    width: 40,\n                                                    height: 40,\n                                                    borderRadius: 1,\n                                                    bgcolor: color,\n                                                    border: '1px solid',\n                                                    borderColor: 'divider',\n                                                } })] })] }), (0, jsx_runtime_1.jsx)(material_1.FormControlLabel, { control: (0, jsx_runtime_1.jsx)(material_1.Switch, { checked: trackQuantity, onChange: (e) => {\n                                        setTrackQuantity(e.target.checked);\n                                        if (!e.target.checked) {\n                                            setUnit('');\n                                        }\n                                    } }), label: (0, jsx_runtime_1.jsxs)(material_1.Box, { children: [\"Track Quantity\", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: { display: 'block', color: 'text.secondary' }, children: \"Enable to track numeric values for this habit\" })] }) }), trackQuantity && ((0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Unit (e.g., pages, minutes, km)\", value: unit, onChange: (e) => setUnit(e.target.value), fullWidth: true, placeholder: \"e.g., pages, minutes, km\", error: !!validationError && validationError.includes('Unit'), helperText: `${unit.length}/20 characters` }))] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: handleClose, children: \"Cancel\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { type: \"submit\", variant: \"contained\", color: \"primary\", disabled: !name.trim() || (trackQuantity && !unit.trim()), children: \"Add Habit\" })] })] }) }));\n};\nexports[\"default\"] = react_1.default.memo(AddHabitDialog);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///675621\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["defaultVendors-node_modules_mui_icons-material_esm_index_js-node_modules_mui_material_index_j-9d0a7d"], () => (__webpack_exec__(455430), __webpack_exec__(563943), __webpack_exec__(1335)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);