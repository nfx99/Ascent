"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateascent"]("main",{

/***/ 675621:
/*!****************************************************!*\
  !*** ./src/renderer/components/AddHabitDialog.tsx ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ 474848);\nconst react_1 = __importStar(__webpack_require__(/*! react */ 296540));\nconst material_1 = __webpack_require__(/*! @mui/material */ 495304);\nconst icons_material_1 = __webpack_require__(/*! @mui/icons-material */ 465113);\nconst HabitContext_1 = __webpack_require__(/*! ../context/HabitContext */ 199684);\nconst FREQUENCY_DESCRIPTIONS = {\n    daily: 'Track this habit every day',\n    weekly: 'Track this habit on a weekly basis',\n    monthly: 'Track this habit monthly',\n};\nconst AddHabitDialog = ({ open, onClose }) => {\n    const { addHabit, error: contextError } = (0, HabitContext_1.useHabits)();\n    const [name, setName] = (0, react_1.useState)('');\n    const [description, setDescription] = (0, react_1.useState)('');\n    const [frequency, setFrequency] = (0, react_1.useState)('daily');\n    const [color, setColor] = (0, react_1.useState)('#1976d2');\n    const [trackQuantity, setTrackQuantity] = (0, react_1.useState)(false);\n    const [unit, setUnit] = (0, react_1.useState)('');\n    const [validationError, setValidationError] = (0, react_1.useState)(null);\n    const resetForm = (0, react_1.useCallback)(() => {\n        setName('');\n        setDescription('');\n        setFrequency('daily');\n        setColor('#1976d2');\n        setTrackQuantity(false);\n        setUnit('');\n        setValidationError(null);\n    }, []);\n    const handleClose = (0, react_1.useCallback)(() => {\n        resetForm();\n        onClose();\n    }, [onClose, resetForm]);\n    const validateForm = (0, react_1.useCallback)(() => {\n        if (!name.trim()) {\n            setValidationError('Habit name is required');\n            return false;\n        }\n        if (name.trim().length > 50) {\n            setValidationError('Habit name must be less than 50 characters');\n            return false;\n        }\n        if (description.length > 200) {\n            setValidationError('Description must be less than 200 characters');\n            return false;\n        }\n        if (trackQuantity && !unit.trim()) {\n            setValidationError('Unit is required when tracking quantity');\n            return false;\n        }\n        if (trackQuantity && unit.trim().length > 20) {\n            setValidationError('Unit must be less than 20 characters');\n            return false;\n        }\n        setValidationError(null);\n        return true;\n    }, [name, description, trackQuantity, unit]);\n    const handleSubmit = (0, react_1.useCallback)((e) => {\n        e.preventDefault();\n        if (!validateForm()) {\n            return;\n        }\n        addHabit({\n            name: name.trim(),\n            description: description.trim(),\n            frequency,\n            color,\n            trackQuantity,\n            unit: trackQuantity ? unit.trim() : undefined,\n        });\n        handleClose();\n    }, [name, description, frequency, color, trackQuantity, unit, addHabit, handleClose, validateForm]);\n    return ((0, jsx_runtime_1.jsx)(material_1.Dialog, { open: open, onClose: handleClose, maxWidth: \"sm\", fullWidth: true, PaperProps: {\n            sx: { minHeight: '50vh' }\n        }, transitionDuration: 300, children: (0, jsx_runtime_1.jsxs)(\"form\", { onSubmit: handleSubmit, children: [(0, jsx_runtime_1.jsx)(material_1.DialogTitle, { children: \"Add New Habit\" }), (0, jsx_runtime_1.jsx)(material_1.DialogContent, { children: (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', flexDirection: 'column', gap: 2, mt: 1 }, children: [(validationError || contextError) && ((0, jsx_runtime_1.jsx)(material_1.Alert, { severity: \"error\", sx: { mb: 2 }, children: validationError || contextError })), (0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Habit Name\", value: name, onChange: (e) => setName(e.target.value), required: true, fullWidth: true, error: !!validationError && validationError.includes('name'), helperText: `${name.length}/50 characters`, InputProps: {\n                                    endAdornment: ((0, jsx_runtime_1.jsx)(material_1.InputAdornment, { position: \"end\", children: (0, jsx_runtime_1.jsx)(material_1.Tooltip, { title: \"Enter a clear, concise name for your habit\", children: (0, jsx_runtime_1.jsx)(material_1.IconButton, { size: \"small\", children: (0, jsx_runtime_1.jsx)(icons_material_1.Help, { fontSize: \"small\" }) }) }) })),\n                                } }), (0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Description\", value: description, onChange: (e) => setDescription(e.target.value), multiline: true, rows: 2, fullWidth: true, error: !!validationError && validationError.includes('Description'), helperText: `${description.length}/200 characters` }), (0, jsx_runtime_1.jsxs)(material_1.FormControl, { fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.InputLabel, { children: \"Frequency\" }), (0, jsx_runtime_1.jsx)(material_1.Select, { value: frequency, label: \"Frequency\", onChange: (e) => setFrequency(e.target.value), children: Object.entries(FREQUENCY_DESCRIPTIONS).map(([value, description]) => ((0, jsx_runtime_1.jsx)(material_1.MenuItem, { value: value, children: (0, jsx_runtime_1.jsxs)(material_1.Box, { children: [(0, jsx_runtime_1.jsx)(material_1.Box, { children: value.charAt(0).toUpperCase() + value.slice(1) }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: { fontSize: '0.75rem', color: 'text.secondary' }, children: description })] }) }, value))) })] }), (0, jsx_runtime_1.jsxs)(material_1.FormControl, { fullWidth: true, children: [(0, jsx_runtime_1.jsx)(material_1.InputLabel, { shrink: true, htmlFor: \"color-input\", children: \"Color\" }), (0, jsx_runtime_1.jsxs)(material_1.Box, { sx: { display: 'flex', alignItems: 'center', gap: 2, mt: 2 }, children: [(0, jsx_runtime_1.jsx)(material_1.TextField, { id: \"color-input\", type: \"color\", value: color, onChange: (e) => setColor(e.target.value), sx: { width: 100 } }), (0, jsx_runtime_1.jsx)(material_1.Box, { sx: {\n                                                    width: 40,\n                                                    height: 40,\n                                                    borderRadius: 1,\n                                                    bgcolor: color,\n                                                    border: '1px solid',\n                                                    borderColor: 'divider',\n                                                } })] })] }), (0, jsx_runtime_1.jsx)(material_1.FormControlLabel, { control: (0, jsx_runtime_1.jsx)(material_1.Switch, { checked: trackQuantity, onChange: (e) => {\n                                        setTrackQuantity(e.target.checked);\n                                        if (!e.target.checked) {\n                                            setUnit('');\n                                        }\n                                    } }), label: (0, jsx_runtime_1.jsxs)(material_1.Box, { children: [\"Track Quantity\", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: \"caption\", sx: { display: 'block', color: 'text.secondary' }, children: \"Enable to track numeric values for this habit\" })] }) }), trackQuantity && ((0, jsx_runtime_1.jsx)(material_1.TextField, { label: \"Unit (e.g., pages, minutes, km)\", value: unit, onChange: (e) => setUnit(e.target.value), fullWidth: true, placeholder: \"e.g., pages, minutes, km\", error: !!validationError && validationError.includes('Unit'), helperText: `${unit.length}/20 characters` }))] }) }), (0, jsx_runtime_1.jsxs)(material_1.DialogActions, { children: [(0, jsx_runtime_1.jsx)(material_1.Button, { onClick: handleClose, children: \"Cancel\" }), (0, jsx_runtime_1.jsx)(material_1.Button, { type: \"submit\", variant: \"contained\", color: \"primary\", disabled: !name.trim() || (trackQuantity && !unit.trim()), children: \"Add Habit\" })] })] }) }));\n};\nexports[\"default\"] = react_1.default.memo(AddHabitDialog);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjc1NjIxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsY0FBYztBQUN6RTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixtQkFBTyxDQUFDLCtCQUFtQjtBQUNqRCw2QkFBNkIsbUJBQU8sQ0FBQyxtQkFBTztBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQywyQkFBZTtBQUMxQyx5QkFBeUIsbUJBQU8sQ0FBQyxpQ0FBcUI7QUFDdEQsdUJBQXVCLG1CQUFPLENBQUMscUNBQXlCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsZUFBZTtBQUN6QyxZQUFZLGdDQUFnQztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLHdEQUF3RDtBQUN4RCxrQkFBa0I7QUFDbEIsU0FBUyx1RUFBdUUsb0ZBQW9GLDJCQUEyQixzREFBc0Qsb0RBQW9ELE1BQU0seURBQXlELDhGQUE4Rix5QkFBeUIsT0FBTyw2Q0FBNkMsbURBQW1ELDBMQUEwTCxZQUFZO0FBQzV3Qix1R0FBdUcsd0VBQXdFLCtHQUErRyx5RUFBeUUsbUJBQW1CLEdBQUcsR0FBRyxHQUFHO0FBQ25ZLG1DQUFtQyxrREFBa0QsME5BQTBOLG1CQUFtQixrQkFBa0IscURBQXFELDRFQUE0RSx1QkFBdUIsK0NBQStDLG1OQUFtTixrRUFBa0Usb0RBQW9ELDBEQUEwRCw0Q0FBNEMsTUFBTSw4Q0FBOEMseUJBQXlCLElBQUksR0FBRyxZQUFZLElBQUkscURBQXFELDRFQUE0RSx5REFBeUQsNkNBQTZDLE1BQU0sc0RBQXNELDREQUE0RCxpR0FBaUcsY0FBYyw0Q0FBNEM7QUFDeGlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxJQUFJLElBQUkseURBQXlELHFEQUFxRDtBQUN6SztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxvREFBb0QsNkVBQTZFLDBCQUEwQiwyQ0FBMkMsNkRBQTZELElBQUksR0FBRyxvRUFBb0Usd09BQXdPLFlBQVksaUJBQWlCLEtBQUssR0FBRyx1REFBdUQsdURBQXVELDBDQUEwQywrQ0FBK0MsMElBQTBJLElBQUksSUFBSSxHQUFHO0FBQzk5QjtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXNjZW50Ly4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvQWRkSGFiaXREaWFsb2cudHN4PzNhYTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG93bktleXMgPSBmdW5jdGlvbihvKSB7XG4gICAgICAgIG93bktleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiAobykge1xuICAgICAgICAgICAgdmFyIGFyID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBrIGluIG8pIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobywgaykpIGFyW2FyLmxlbmd0aF0gPSBrO1xuICAgICAgICAgICAgcmV0dXJuIGFyO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gb3duS2V5cyhvKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAobW9kKSB7XG4gICAgICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICAgICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrID0gb3duS2V5cyhtb2QpLCBpID0gMDsgaSA8IGsubGVuZ3RoOyBpKyspIGlmIChrW2ldICE9PSBcImRlZmF1bHRcIikgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrW2ldKTtcbiAgICAgICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGpzeF9ydW50aW1lXzEgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCByZWFjdF8xID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBtYXRlcmlhbF8xID0gcmVxdWlyZShcIkBtdWkvbWF0ZXJpYWxcIik7XG5jb25zdCBpY29uc19tYXRlcmlhbF8xID0gcmVxdWlyZShcIkBtdWkvaWNvbnMtbWF0ZXJpYWxcIik7XG5jb25zdCBIYWJpdENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi9jb250ZXh0L0hhYml0Q29udGV4dFwiKTtcbmNvbnN0IEZSRVFVRU5DWV9ERVNDUklQVElPTlMgPSB7XG4gICAgZGFpbHk6ICdUcmFjayB0aGlzIGhhYml0IGV2ZXJ5IGRheScsXG4gICAgd2Vla2x5OiAnVHJhY2sgdGhpcyBoYWJpdCBvbiBhIHdlZWtseSBiYXNpcycsXG4gICAgbW9udGhseTogJ1RyYWNrIHRoaXMgaGFiaXQgbW9udGhseScsXG59O1xuY29uc3QgQWRkSGFiaXREaWFsb2cgPSAoeyBvcGVuLCBvbkNsb3NlIH0pID0+IHtcbiAgICBjb25zdCB7IGFkZEhhYml0LCBlcnJvcjogY29udGV4dEVycm9yIH0gPSAoMCwgSGFiaXRDb250ZXh0XzEudXNlSGFiaXRzKSgpO1xuICAgIGNvbnN0IFtuYW1lLCBzZXROYW1lXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSgnJyk7XG4gICAgY29uc3QgW2Rlc2NyaXB0aW9uLCBzZXREZXNjcmlwdGlvbl0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoJycpO1xuICAgIGNvbnN0IFtmcmVxdWVuY3ksIHNldEZyZXF1ZW5jeV0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoJ2RhaWx5Jyk7XG4gICAgY29uc3QgW2NvbG9yLCBzZXRDb2xvcl0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoJyMxOTc2ZDInKTtcbiAgICBjb25zdCBbdHJhY2tRdWFudGl0eSwgc2V0VHJhY2tRdWFudGl0eV0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoZmFsc2UpO1xuICAgIGNvbnN0IFt1bml0LCBzZXRVbml0XSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSgnJyk7XG4gICAgY29uc3QgW3ZhbGlkYXRpb25FcnJvciwgc2V0VmFsaWRhdGlvbkVycm9yXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKShudWxsKTtcbiAgICBjb25zdCByZXNldEZvcm0gPSAoMCwgcmVhY3RfMS51c2VDYWxsYmFjaykoKCkgPT4ge1xuICAgICAgICBzZXROYW1lKCcnKTtcbiAgICAgICAgc2V0RGVzY3JpcHRpb24oJycpO1xuICAgICAgICBzZXRGcmVxdWVuY3koJ2RhaWx5Jyk7XG4gICAgICAgIHNldENvbG9yKCcjMTk3NmQyJyk7XG4gICAgICAgIHNldFRyYWNrUXVhbnRpdHkoZmFsc2UpO1xuICAgICAgICBzZXRVbml0KCcnKTtcbiAgICAgICAgc2V0VmFsaWRhdGlvbkVycm9yKG51bGwpO1xuICAgIH0sIFtdKTtcbiAgICBjb25zdCBoYW5kbGVDbG9zZSA9ICgwLCByZWFjdF8xLnVzZUNhbGxiYWNrKSgoKSA9PiB7XG4gICAgICAgIHJlc2V0Rm9ybSgpO1xuICAgICAgICBvbkNsb3NlKCk7XG4gICAgfSwgW29uQ2xvc2UsIHJlc2V0Rm9ybV0pO1xuICAgIGNvbnN0IHZhbGlkYXRlRm9ybSA9ICgwLCByZWFjdF8xLnVzZUNhbGxiYWNrKSgoKSA9PiB7XG4gICAgICAgIGlmICghbmFtZS50cmltKCkpIHtcbiAgICAgICAgICAgIHNldFZhbGlkYXRpb25FcnJvcignSGFiaXQgbmFtZSBpcyByZXF1aXJlZCcpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChuYW1lLnRyaW0oKS5sZW5ndGggPiA1MCkge1xuICAgICAgICAgICAgc2V0VmFsaWRhdGlvbkVycm9yKCdIYWJpdCBuYW1lIG11c3QgYmUgbGVzcyB0aGFuIDUwIGNoYXJhY3RlcnMnKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGVzY3JpcHRpb24ubGVuZ3RoID4gMjAwKSB7XG4gICAgICAgICAgICBzZXRWYWxpZGF0aW9uRXJyb3IoJ0Rlc2NyaXB0aW9uIG11c3QgYmUgbGVzcyB0aGFuIDIwMCBjaGFyYWN0ZXJzJyk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRyYWNrUXVhbnRpdHkgJiYgIXVuaXQudHJpbSgpKSB7XG4gICAgICAgICAgICBzZXRWYWxpZGF0aW9uRXJyb3IoJ1VuaXQgaXMgcmVxdWlyZWQgd2hlbiB0cmFja2luZyBxdWFudGl0eScpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0cmFja1F1YW50aXR5ICYmIHVuaXQudHJpbSgpLmxlbmd0aCA+IDIwKSB7XG4gICAgICAgICAgICBzZXRWYWxpZGF0aW9uRXJyb3IoJ1VuaXQgbXVzdCBiZSBsZXNzIHRoYW4gMjAgY2hhcmFjdGVycycpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHNldFZhbGlkYXRpb25FcnJvcihudWxsKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSwgW25hbWUsIGRlc2NyaXB0aW9uLCB0cmFja1F1YW50aXR5LCB1bml0XSk7XG4gICAgY29uc3QgaGFuZGxlU3VibWl0ID0gKDAsIHJlYWN0XzEudXNlQ2FsbGJhY2spKChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYgKCF2YWxpZGF0ZUZvcm0oKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGFkZEhhYml0KHtcbiAgICAgICAgICAgIG5hbWU6IG5hbWUudHJpbSgpLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLnRyaW0oKSxcbiAgICAgICAgICAgIGZyZXF1ZW5jeSxcbiAgICAgICAgICAgIGNvbG9yLFxuICAgICAgICAgICAgdHJhY2tRdWFudGl0eSxcbiAgICAgICAgICAgIHVuaXQ6IHRyYWNrUXVhbnRpdHkgPyB1bml0LnRyaW0oKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgfSk7XG4gICAgICAgIGhhbmRsZUNsb3NlKCk7XG4gICAgfSwgW25hbWUsIGRlc2NyaXB0aW9uLCBmcmVxdWVuY3ksIGNvbG9yLCB0cmFja1F1YW50aXR5LCB1bml0LCBhZGRIYWJpdCwgaGFuZGxlQ2xvc2UsIHZhbGlkYXRlRm9ybV0pO1xuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkRpYWxvZywgeyBvcGVuOiBvcGVuLCBvbkNsb3NlOiBoYW5kbGVDbG9zZSwgbWF4V2lkdGg6IFwic21cIiwgZnVsbFdpZHRoOiB0cnVlLCBQYXBlclByb3BzOiB7XG4gICAgICAgICAgICBzeDogeyBtaW5IZWlnaHQ6ICc1MHZoJyB9XG4gICAgICAgIH0sIHRyYW5zaXRpb25EdXJhdGlvbjogMzAwLCBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4cykoXCJmb3JtXCIsIHsgb25TdWJtaXQ6IGhhbmRsZVN1Ym1pdCwgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuRGlhbG9nVGl0bGUsIHsgY2hpbGRyZW46IFwiQWRkIE5ldyBIYWJpdFwiIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuRGlhbG9nQ29udGVudCwgeyBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5Cb3gsIHsgc3g6IHsgZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJywgZ2FwOiAyLCBtdDogMSB9LCBjaGlsZHJlbjogWyh2YWxpZGF0aW9uRXJyb3IgfHwgY29udGV4dEVycm9yKSAmJiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkFsZXJ0LCB7IHNldmVyaXR5OiBcImVycm9yXCIsIHN4OiB7IG1iOiAyIH0sIGNoaWxkcmVuOiB2YWxpZGF0aW9uRXJyb3IgfHwgY29udGV4dEVycm9yIH0pKSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLlRleHRGaWVsZCwgeyBsYWJlbDogXCJIYWJpdCBOYW1lXCIsIHZhbHVlOiBuYW1lLCBvbkNoYW5nZTogKGUpID0+IHNldE5hbWUoZS50YXJnZXQudmFsdWUpLCByZXF1aXJlZDogdHJ1ZSwgZnVsbFdpZHRoOiB0cnVlLCBlcnJvcjogISF2YWxpZGF0aW9uRXJyb3IgJiYgdmFsaWRhdGlvbkVycm9yLmluY2x1ZGVzKCduYW1lJyksIGhlbHBlclRleHQ6IGAke25hbWUubGVuZ3RofS81MCBjaGFyYWN0ZXJzYCwgSW5wdXRQcm9wczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kQWRvcm5tZW50OiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLklucHV0QWRvcm5tZW50LCB7IHBvc2l0aW9uOiBcImVuZFwiLCBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLlRvb2x0aXAsIHsgdGl0bGU6IFwiRW50ZXIgYSBjbGVhciwgY29uY2lzZSBuYW1lIGZvciB5b3VyIGhhYml0XCIsIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuSWNvbkJ1dHRvbiwgeyBzaXplOiBcInNtYWxsXCIsIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKGljb25zX21hdGVyaWFsXzEuSGVscCwgeyBmb250U2l6ZTogXCJzbWFsbFwiIH0pIH0pIH0pIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLlRleHRGaWVsZCwgeyBsYWJlbDogXCJEZXNjcmlwdGlvblwiLCB2YWx1ZTogZGVzY3JpcHRpb24sIG9uQ2hhbmdlOiAoZSkgPT4gc2V0RGVzY3JpcHRpb24oZS50YXJnZXQudmFsdWUpLCBtdWx0aWxpbmU6IHRydWUsIHJvd3M6IDIsIGZ1bGxXaWR0aDogdHJ1ZSwgZXJyb3I6ICEhdmFsaWRhdGlvbkVycm9yICYmIHZhbGlkYXRpb25FcnJvci5pbmNsdWRlcygnRGVzY3JpcHRpb24nKSwgaGVscGVyVGV4dDogYCR7ZGVzY3JpcHRpb24ubGVuZ3RofS8yMDAgY2hhcmFjdGVyc2AgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeHMpKG1hdGVyaWFsXzEuRm9ybUNvbnRyb2wsIHsgZnVsbFdpZHRoOiB0cnVlLCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5JbnB1dExhYmVsLCB7IGNoaWxkcmVuOiBcIkZyZXF1ZW5jeVwiIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuU2VsZWN0LCB7IHZhbHVlOiBmcmVxdWVuY3ksIGxhYmVsOiBcIkZyZXF1ZW5jeVwiLCBvbkNoYW5nZTogKGUpID0+IHNldEZyZXF1ZW5jeShlLnRhcmdldC52YWx1ZSksIGNoaWxkcmVuOiBPYmplY3QuZW50cmllcyhGUkVRVUVOQ1lfREVTQ1JJUFRJT05TKS5tYXAoKFt2YWx1ZSwgZGVzY3JpcHRpb25dKSA9PiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLk1lbnVJdGVtLCB7IHZhbHVlOiB2YWx1ZSwgY2hpbGRyZW46ICgwLCBqc3hfcnVudGltZV8xLmpzeHMpKG1hdGVyaWFsXzEuQm94LCB7IGNoaWxkcmVuOiBbKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJveCwgeyBjaGlsZHJlbjogdmFsdWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB2YWx1ZS5zbGljZSgxKSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJveCwgeyBzeDogeyBmb250U2l6ZTogJzAuNzVyZW0nLCBjb2xvcjogJ3RleHQuc2Vjb25kYXJ5JyB9LCBjaGlsZHJlbjogZGVzY3JpcHRpb24gfSldIH0pIH0sIHZhbHVlKSkpIH0pXSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5Gb3JtQ29udHJvbCwgeyBmdWxsV2lkdGg6IHRydWUsIGNoaWxkcmVuOiBbKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLklucHV0TGFiZWwsIHsgc2hyaW5rOiB0cnVlLCBodG1sRm9yOiBcImNvbG9yLWlucHV0XCIsIGNoaWxkcmVuOiBcIkNvbG9yXCIgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeHMpKG1hdGVyaWFsXzEuQm94LCB7IHN4OiB7IGRpc3BsYXk6ICdmbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicsIGdhcDogMiwgbXQ6IDIgfSwgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuVGV4dEZpZWxkLCB7IGlkOiBcImNvbG9yLWlucHV0XCIsIHR5cGU6IFwiY29sb3JcIiwgdmFsdWU6IGNvbG9yLCBvbkNoYW5nZTogKGUpID0+IHNldENvbG9yKGUudGFyZ2V0LnZhbHVlKSwgc3g6IHsgd2lkdGg6IDEwMCB9IH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKG1hdGVyaWFsXzEuQm94LCB7IHN4OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDQwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJnY29sb3I6IGNvbG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdkaXZpZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gfSldIH0pXSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkZvcm1Db250cm9sTGFiZWwsIHsgY29udHJvbDogKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLlN3aXRjaCwgeyBjaGVja2VkOiB0cmFja1F1YW50aXR5LCBvbkNoYW5nZTogKGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUcmFja1F1YW50aXR5KGUudGFyZ2V0LmNoZWNrZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZS50YXJnZXQuY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRVbml0KCcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IH0pLCBsYWJlbDogKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5Cb3gsIHsgY2hpbGRyZW46IFtcIlRyYWNrIFF1YW50aXR5XCIsICgwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5UeXBvZ3JhcGh5LCB7IHZhcmlhbnQ6IFwiY2FwdGlvblwiLCBzeDogeyBkaXNwbGF5OiAnYmxvY2snLCBjb2xvcjogJ3RleHQuc2Vjb25kYXJ5JyB9LCBjaGlsZHJlbjogXCJFbmFibGUgdG8gdHJhY2sgbnVtZXJpYyB2YWx1ZXMgZm9yIHRoaXMgaGFiaXRcIiB9KV0gfSkgfSksIHRyYWNrUXVhbnRpdHkgJiYgKCgwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5UZXh0RmllbGQsIHsgbGFiZWw6IFwiVW5pdCAoZS5nLiwgcGFnZXMsIG1pbnV0ZXMsIGttKVwiLCB2YWx1ZTogdW5pdCwgb25DaGFuZ2U6IChlKSA9PiBzZXRVbml0KGUudGFyZ2V0LnZhbHVlKSwgZnVsbFdpZHRoOiB0cnVlLCBwbGFjZWhvbGRlcjogXCJlLmcuLCBwYWdlcywgbWludXRlcywga21cIiwgZXJyb3I6ICEhdmFsaWRhdGlvbkVycm9yICYmIHZhbGlkYXRpb25FcnJvci5pbmNsdWRlcygnVW5pdCcpLCBoZWxwZXJUZXh0OiBgJHt1bml0Lmxlbmd0aH0vMjAgY2hhcmFjdGVyc2AgfSkpXSB9KSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4cykobWF0ZXJpYWxfMS5EaWFsb2dBY3Rpb25zLCB7IGNoaWxkcmVuOiBbKDAsIGpzeF9ydW50aW1lXzEuanN4KShtYXRlcmlhbF8xLkJ1dHRvbiwgeyBvbkNsaWNrOiBoYW5kbGVDbG9zZSwgY2hpbGRyZW46IFwiQ2FuY2VsXCIgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkobWF0ZXJpYWxfMS5CdXR0b24sIHsgdHlwZTogXCJzdWJtaXRcIiwgdmFyaWFudDogXCJjb250YWluZWRcIiwgY29sb3I6IFwicHJpbWFyeVwiLCBkaXNhYmxlZDogIW5hbWUudHJpbSgpIHx8ICh0cmFja1F1YW50aXR5ICYmICF1bml0LnRyaW0oKSksIGNoaWxkcmVuOiBcIkFkZCBIYWJpdFwiIH0pXSB9KV0gfSkgfSkpO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJlYWN0XzEuZGVmYXVsdC5tZW1vKEFkZEhhYml0RGlhbG9nKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///675621\n");

/***/ })

});